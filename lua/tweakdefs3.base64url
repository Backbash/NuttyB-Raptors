LS1UNCBMZWdlbmRhcnkgRGVmZW5zZXMNCi0tIEF1dGhvcnM6IEhlZGdlaG9nenMNCi0tIGRvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xUVNWc3VBQU1oQnJoaVpkVGloVmZTQ3dQemJiWldETEN0WFdQMjNDVTBrbw0KbG9jYWwgYSxiLGMsZCxlPVVuaXREZWZzIG9ye30sdGFibGUubWVyZ2UsJ2xlZ2VuZGFyeV9wdWxzYXInLCdsZWdlbmRhcnlfYnVsd2FyaycsJ2xlZ2VuZGFyeV9iYXN0aW9uJ2EubGVnZW5kYXJ5X3B1bHNhcj1iKGFbJ2FybWFubml0MyddLHtuYW1lPSdMZWdlbmRhcnkgUHVsc2FyJyxkZXNjcmlwdGlvbj0nQSBwaW5uYWNsZSBvZiBBcm1hZGEgZW5naW5lZXJpbmcgdGhhdCBmaXJlcyBkZXZhc3RhdGluZywgcmFwaWQtZmlyZSB0YWNoeW9uIGJvbHRzLicsYnVpbGR0aW1lPTI4MDAwMCxoZWFsdGg9NzUwMDAsbWV0YWxjb3N0PTMyMDAwLGVuZXJneWNvc3Q9ODAwMDAwLGRhbWFnZW1vZGlmaWVyPTAuMTUsZW5lcmd5c3RvcmFnZT02MDAwLGlkbGVhdXRvaGVhbD0xMCxyYWRhcmRpc3RhbmNlPTE4MDAsc2lnaHRkaXN0YW5jZT0xMjAwLGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0xlZ2VuZGFyeSBQdWxzYXInLGkxOG5fZW5fdG9vbHRpcD0nRmlyZXMgZGV2YXN0YXRpbmcsIHJhcGlkLWZpcmUgdGFjaHlvbiBib2x0cyBhdCBleHRyZW1lIHJhbmdlLicsdGVjaGxldmVsPTR9LGZlYXR1cmVkZWZzPXtkZWFkPXtkYW1hZ2U9MzYwMCxtZXRhbD0xMTY0MH0saGVhcD17ZGFtYWdlPTE4MDAsbWV0YWw9NDY1Nn19LHdlYXBvbmRlZnM9e3RhY2h5b25fYnVyc3RfY2Fubm9uPXtuYW1lPSdUYWNoeW9uIEJ1cnN0IENhbm5vbicsd2VhcG9udHlwZT0nTGFzZXJDYW5ub24nLHJnYmNvbG9yPScwLjIgMC43IDEuMCcsYnVyc3Q9MyxidXJzdHJhdGU9MC4xNSxyZWxvYWR0aW1lPTEuOCxhY2N1cmFjeT00MDAsYXJlYW9mZWZmZWN0PTEyOCxyYW5nZT0xODAwLGVuZXJneXBlcnNob3Q9NTAwLHR1cnJldD10cnVlLHNvdW5kc3RhcnQ9J2FubmlndW4xJyxzb3VuZGhpdD0neHBsb2xyZzMnLGltcHVsc2VmYWN0b3I9MCx3ZWFwb252ZWxvY2l0eT0xNTAwLHRoaWNrbmVzcz0xMCxleHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTp0YWNoeW9uc2hvdCcsZGFtYWdlPXtkZWZhdWx0PTM1NTB9LGFsbG93Tm9uQmxvY2tpbmdBaW09dHJ1ZSxhdm9pZGZlYXR1cmU9ZmFsc2UsYXZvaWRmcmllbmRseT1mYWxzZSxjb2xsaWRlZnJpZW5kbHk9ZmFsc2V9fSx3ZWFwb25zPXtbMV09e2RlZj0ndGFjaHlvbl9idXJzdF9jYW5ub24nLG9ubHl0YXJnZXRjYXRlZ29yeT0nU1VSRkFDRSd9fX0pYS5sZWdlbmRhcnlfYmFzdGlvbj1iKGFbJ2xlZ2Jhc3Rpb24nXSx7bmFtZT0nTGVnZW5kYXJ5IEJhc3Rpb24nLGRlc2NyaXB0aW9uPSdUaGUgdWx0aW1hdGUgZGVmZW5zaXZlIGVtcGxhY2VtZW50LiBQcm9qZWN0cyBhIGRldmFzdGF0aW5nLCBwdWxzYXRpbmcgaGVhdHJheS4nLGhlYWx0aD03NTAwMCxtZXRhbGNvc3Q9NDgwMDAsZW5lcmd5Y29zdD0xNDUwMDAwLGJ1aWxkdGltZT0xODAwMDAsb2JqZWN0bmFtZT0nc2NhdnMvc2NhdmJlYWNvbl90NC5zM28nLHNjcmlwdD0nc2NhdnMvc2NhdmJlYWNvbi5jb2InLGJ1aWxkcGljPSdzY2F2ZW5nZXJzL1NDQVZCRUFDT04uRERTJyxkYW1hZ2Vtb2RpZmllcj0wLjIwLGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0xlZ2VuZGFyeSBCYXN0aW9uJyxpMThuX2VuX3Rvb2x0aXA9J1Byb2plY3RzIGEgZGV2YXN0YXRpbmcsIHB1bHNhdGluZyBwdXJwbGUgaGVhdHJheS4nLG1heHJhbmdlPTE0MDAsdGVjaGxldmVsPTR9LHdlYXBvbmRlZnM9e2xlZ2VuZGFyeV9iYXN0aW9uX3JheT17bmFtZT0nTGVnZW5kYXJ5IEhlYXQgUmF5Jyx0aGlja25lc3M9MTUscmdiY29sb3I9JzEuMCAwLjIgMS4wJyxyYW5nZT0xNDAwLGRhbWFnZT17ZGVmYXVsdD0yOTk1LHZ0b2w9MTV9LHdlYXBvbnR5cGU9J0JlYW1MYXNlcicscmVsb2FkdGltZT0wLjMsc291bmRzdGFydD0nYmFudGhpZTInLHNvdW5kdHJpZ2dlcj10cnVlLGFyZWFvZmVmZmVjdD0xMjAsYXZvaWRmZWF0dXJlPWZhbHNlLGF2b2lkZnJpZW5kbHk9dHJ1ZSxiZWFtdGltZT0wLjMsY2FtZXJhc2hha2U9MC4xLGNvcmV0aGlja25lc3M9MC4zLGNyYXRlcmFyZWFvZmVmZmVjdD0xMjAsY3JhdGVyYm9vc3Q9MCxjcmF0ZXJtdWx0PTAsZWRnZWVmZmVjdGl2ZW5lc3M9MC40NSxlbmVyZ3lwZXJzaG90PTUwMCxleHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpsYXNlcmhpdC1tZWRpdW0tcHVycGxlJyxmaXJlc3RhcnRlcj05MCxmaXJldG9sZXJhbmNlPTMwMCxpbXB1bHNlZmFjdG9yPTAsbGFzZXJmbGFyZXNpemU9Nixub3NlbGZkYW1hZ2U9dHJ1ZSxwcmVkaWN0Ym9vc3Q9MC4zLHByb3hpbWl0eXByaW9yaXR5PTEscmdiY29sb3IyPScwLjkgMS4wIDAuNScsc291bmRoaXRkcnk9Jycsc291bmRoaXR3ZXQ9J3NpenpsZScsdHVycmV0PXRydWUsd2VhcG9udmVsb2NpdHk9MTUwMCxhbGxvd05vbkJsb2NraW5nQWltPXRydWUsY29sbGlkZWZyaWVuZGx5PWZhbHNlfX0sd2VhcG9ucz17WzFdPXtiYWR0YXJnZXRjYXRlZ29yeT0nVlRPTCBHUk9VTkRTQ09VVCcsZGVmPSdsZWdlbmRhcnlfYmFzdGlvbl9yYXknLG9ubHl0YXJnZXRjYXRlZ29yeT0nU1VSRkFDRSd9fX0pYVtkXT1iKGFbJ2NvcmRvb210MyddLHtuYW1lPSdMZWdlbmRhcnkgQnVsd2FyaycsZGVzY3JpcHRpb249J0EgcGlubmFjbGUgb2YgZGVmZW5zaXZlIHRlY2hub2xvZ3ksIHRoZSBMZWdlbmRhcnkgQnVsd2FyayBhbm5paGlsYXRlcyBhbGwgd2hvIGFwcHJvYWNoLicsYnVpbGR0aW1lPTI1MDAwMCxoZWFsdGg9OTUwMDAsbWV0YWxjb3N0PTQ1MDAwLGVuZXJneWNvc3Q9MTI1MDAwMCxkYW1hZ2Vtb2RpZmllcj0wLjE1LGVuZXJneXN0b3JhZ2U9NTAwMCxpZGxlYXV0b2hlYWw9MTUscmFkYXJkaXN0YW5jZT0xNDAwLHNpZ2h0ZGlzdGFuY2U9MTEwMCxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdMZWdlbmRhcnkgQnVsd2FyaycsaTE4bl9lbl90b29sdGlwPSdUaGUgdWx0aW1hdGUgZGVmZW5zaXZlIHN0cnVjdHVyZS4nLHBhcmFseXplbXVsdGlwbGllcj0wLjIsdGVjaGxldmVsPTR9LGZlYXR1cmVkZWZzPXtkZWFkPXtkYW1hZ2U9MTA4MDAsbWV0YWw9OTY2Nn0saGVhcD17ZGFtYWdlPTU0MDAsbWV0YWw9Mzg2NH19LHdlYXBvbmRlZnM9e2xlZ2VuZGFyeV9vdmVybG9hZF9zY2F0dGVyPXtuYW1lPSdPdmVybG9hZCBTY2F0dGVyIEJlYW1lcicsd2VhcG9udHlwZT0nQmVhbUxhc2VyJyxyYW5nZT0xNTAwLHJlbG9hZHRpbWU9MC4xLHNwcmF5YW5nbGU9MzAwMCxwcm9qZWN0aWxlcz0xMixyZ2Jjb2xvcj0nMC44IDAuMSAxLjAnLGFjY3VyYWN5PTUwLGFsbG93Tm9uQmxvY2tpbmdBaW09dHJ1ZSxhcmVhb2ZlZmZlY3Q9MTAsYmVhbWRlY2F5PTAuMDUsYmVhbXRpbWU9MC4xLGJlYW10dGw9MSxjb3JldGhpY2tuZXNzPTAuMjUsYnVybmJsb3c9dHJ1ZSxjeWxpbmRlcnRhcmdldGluZz0xLGVkZ2VlZmZlY3RpdmVuZXNzPTAuMTUsZXhwbG9zaW9uZ2VuZXJhdG9yPSdjdXN0b206bGFzZXJoaXQtbWVkaXVtLXB1cnBsZScsZmlyZXN0YXJ0ZXI9MTAwLGltcHVsc2VmYWN0b3I9MC4xMjMsaW50ZW5zaXR5PTAuNyxsYXNlcmZsYXJlc2l6ZT05LjM1LG5vc2VsZmRhbWFnZT10cnVlLHNvdW5kaGl0d2V0PSdzaXp6bGUnLHNvdW5kc3RhcnQ9J2JlYW1lcnNob3QyJyx0b2xlcmFuY2U9NTAwMCx0aGlja25lc3M9Nix0dXJyZXQ9dHJ1ZSx3ZWFwb252ZWxvY2l0eT0xMDAwLGRhbWFnZT17ZGVmYXVsdD01MDB9LGF2b2lkZmVhdHVyZT1mYWxzZSxhdm9pZGZyaWVuZGx5PWZhbHNlLGNvbGxpZGVmcmllbmRseT1mYWxzZX0sbGVnZW5kYXJ5X2hlYXRfcmF5PXtuYW1lPSdBcm1hZ2VkZG9uIEhlYXQgUmF5Jyx3ZWFwb250eXBlPSdCZWFtTGFzZXInLHJhbmdlPTEzMDAscmVsb2FkdGltZT00LjAsYXJlYW9mZWZmZWN0PTcyLGF2b2lkZmVhdHVyZT1mYWxzZSxiZWFtdGltZT0wLjYsY2FtZXJhU2hha2U9MzUwLGNvcmV0aGlja25lc3M9MC40MCxjcmF0ZXJhcmVhb2ZlZmZlY3Q9NzIsZW5lcmd5cGVyc2hvdD0xMjAwLGV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOmdlbmVyaWNzaGVsbGV4cGxvc2lvbi1tZWRpdW0tYmVhbScsaW1wdWxzZWZhY3Rvcj0wLGxhcmdlYmVhbWxhc2VyPXRydWUsbGFzZXJmbGFyZXNpemU9OC44LG5vc2VsZmRhbWFnZT10cnVlLHJnYmNvbG9yPScxIDAuOCAwJyxyZ2Jjb2xvcjI9JzAuOCAwIDAnLHNjcm9sbHNwZWVkPTUsc291bmRoaXRkcnk9Jycsc291bmRoaXR3ZXQ9J3NpenpsZScsc291bmRzdGFydD0naGVhdHJheTJ4bCcsc291bmR0cmlnZ2VyPTEsdGhpY2tuZXNzPTcsdG9sZXJhbmNlPTEwMDAwLHR1cnJldD10cnVlLHdlYXBvbnZlbG9jaXR5PTE4MDAsZGFtYWdlPXtkZWZhdWx0PTEwMDAwLGNvbW1hbmRlcnM9MTM1MH0sYWxsb3dOb25CbG9ja2luZ0FpbT10cnVlLGF2b2lkZnJpZW5kbHk9ZmFsc2UsY29sbGlkZWZyaWVuZGx5PWZhbHNlfSxsZWdlbmRhcnlfcG9pbnRfZGVmZW5zZT17bmFtZT0nUG9pbnQgRGVmZW5zZSBMYXNlcicsd2VhcG9udHlwZT0nQmVhbUxhc2VyJyxyYW5nZT03NTAscmVsb2FkdGltZT0wLjUsYXJlYW9mZWZmZWN0PTEyLGF2b2lkZmVhdHVyZT1mYWxzZSxiZWFtdGltZT0wLjMsY29yZXRoaWNrbmVzcz0wLjMyLGVuZXJneXBlcnNob3Q9NTAwLGV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOmxhc2VyaGl0LWxhcmdlLWJsdWUnLGZpcmVzdGFydGVyPTkwLGltcGFjdG9ubHk9MSxpbXB1bHNlZmFjdG9yPTAsbGFyZ2ViZWFtbGFzZXI9dHJ1ZSxsYXNlcmZsYXJlc2l6ZT04Ljgsbm9zZWxmZGFtYWdlPXRydWUscHJveGltaXR5cHJpb3JpdHk9MCxyZ2Jjb2xvcj0nMCAwIDEnLHNvdW5kaGl0ZHJ5PScnLHNvdW5kaGl0d2V0PSdzaXp6bGUnLHNvdW5kc3RhcnQ9J2FubmlndW4xJyxzb3VuZHRyaWdnZXI9MSx0ZXh0dXJlMz0nbGFyZ2ViZWFtJyx0aGlja25lc3M9NS41LHRpbGVsZW5ndGg9MTUwLHRvbGVyYW5jZT0xMDAwMCx0dXJyZXQ9dHJ1ZSx3ZWFwb252ZWxvY2l0eT0xNTAwLGRhbWFnZT17ZGVmYXVsdD01MDAsY29tbWFuZGVycz05OTl9LGFsbG93Tm9uQmxvY2tpbmdBaW09dHJ1ZSxhdm9pZGZyaWVuZGx5PWZhbHNlLGNvbGxpZGVmcmllbmRseT1mYWxzZX19LHdlYXBvbnM9e1sxXT17ZGVmPSdsZWdlbmRhcnlfb3ZlcmxvYWRfc2NhdHRlcid9LFsyXT17ZGVmPSdsZWdlbmRhcnlfaGVhdF9yYXknfSxbM109e2RlZj0nbGVnZW5kYXJ5X3BvaW50X2RlZmVuc2UnfX19KWxvY2FsIGY9eydhcm1hY2EnLCdhcm1hY2snLCdhcm1hY3N1YicsJ2FybWFjdicsJ2NvcmFjYScsJ2NvcmFjaycsJ2NvcmFjc3ViJywnY29yYWN2JywnbGVnYWNhJywnbGVnYWNrJywnbGVnYWN2JywnbGVnY29tdDJjb20nfWZvciBnLGggaW4gcGFpcnN7J2FybScsJ2NvcicsJ2xlZyd9ZG8gZm9yIGk9MywxMCBkbyB0YWJsZS5pbnNlcnQoZixoLi4nY29tbHZsJy4uaSllbmQ7dGFibGUuaW5zZXJ0KGYsaC4uJ3QzYWlyYWlkZScpZW5kO2ZvciBnLGogaW4gcGFpcnMoZilkbyBpZiBhW2pddGhlbiBsb2NhbCBoPXN0cmluZy5zdWIoaiwxLDMpdGFibGUuaW5zZXJ0KGFbal0uYnVpbGRvcHRpb25zLGg9PSdhcm0nYW5kIGMgb3IgaD09J2NvcidhbmQgZCBvciBlKWVuZCBlbmQ