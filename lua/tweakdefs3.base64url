LS1UNCBEZWZlbmNlcyBOdXR0eUIgQmFsYW5jZQ0KLS0gQXV0aG9yczogSGVkZ2Vob2d6cw0KLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvDQpsb2NhbCBhLGIsYyxkLGU9VW5pdERlZnMgb3J7fSx0YWJsZS5tZXJnZSwnbGVnZW5kYXJ5X3B1bHNhcicsJ2xlZ2VuZGFyeV9idWx3YXJrJywnbGVnZW5kYXJ5X2Jhc3Rpb24nYS5sZWdlbmRhcnlfcHVsc2FyPWIoYVsnYXJtYW5uaXQzJ10se25hbWU9J0xlZ2VuZGFyeSBQdWxzYXInLGRlc2NyaXB0aW9uPSdBIHBpbm5hY2xlIG9mIEFybWFkYSBlbmdpbmVlcmluZyB0aGF0IGZpcmVzIGRldmFzdGF0aW5nLCByYXBpZC1maXJlIHRhY2h5b24gYm9sdHMuJyxidWlsZHRpbWU9MzAwMDAwLGhlYWx0aD0zMDAwMCxtZXRhbGNvc3Q9NDM4NDAsZW5lcmd5Y29zdD0xMDk2MDAwLGRhbWFnZW1vZGlmaWVyPTAuMTUsaWNvbnR5cGU9ImFybWFubml0MyIsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnZW5kYXJ5IFB1bHNhcicsaTE4bl9lbl90b29sdGlwPSdGaXJlcyBkZXZhc3RhdGluZywgcmFwaWQtZmlyZSB0YWNoeW9uIGJvbHRzLicsdGVjaGxldmVsPTR9LHdlYXBvbmRlZnM9e3RhY2h5b25fYnVyc3RfY2Fubm9uPXtjb2xsaWRlZnJpZW5kbHk9MCxjb2xsaWRlZmVhdHVyZT0wLGF2b2lkZmVhdHVyZT0wLGF2b2lkZnJpZW5kbHk9MCxuYW1lPSdUYWNoeW9uIEJ1cnN0IENhbm5vbicsd2VhcG9udHlwZT0nTGFzZXJDYW5ub24nLHJnYmNvbG9yPScxIDAgMScsYnVyc3Q9MyxidXJzdHJhdGU9MC40MCxyZWxvYWR0aW1lPTUsYWNjdXJhY3k9NDAwLGFyZWFvZmVmZmVjdD0xMixyYW5nZT0xODAwLGVuZXJneXBlcnNob3Q9MTIwMDAsdHVycmV0PXRydWUsc291bmRzdGFydD0nYW5uaWd1bjEnLHNvdW5kaGl0PSd4cGxvbHJnMycsaW1wdWxzZWZhY3Rvcj0wLHdlYXBvbnZlbG9jaXR5PTMxMDAsdGhpY2tuZXNzPTEwLGxhc2VyZmxhcmVzaXplPTgsdGV4dHVyZTM9ImxhcmdlYmVhbSIsdGlsZWxlbmd0aD0xNTAsdG9sZXJhbmNlPTEwMDAwLGJlYW10aW1lPTMsZXhwbG9zaW9uZ2VuZXJhdG9yPSdjdXN0b206dGFjaHlvbnNob3QnLGRhbWFnZT17ZGVmYXVsdD00MDAwfSxhbGxvd05vbkJsb2NraW5nQWltPXRydWV9fSx3ZWFwb25zPXtbMV09e2JhZHRhcmdldGNhdGVnb3J5PSJWVE9MIEdST1VORFNDT1VUIixkZWY9J3RhY2h5b25fYnVyc3RfY2Fubm9uJyxvbmx5dGFyZ2V0Y2F0ZWdvcnk9J1NVUkZBQ0UnfX19KWEubGVnZW5kYXJ5X2Jhc3Rpb249YihhWydsZWdiYXN0aW9uJ10se25hbWU9J0xlZ2VuZGFyeSBCYXN0aW9uJyxkZXNjcmlwdGlvbj0nVGhlIHVsdGltYXRlIGRlZmVuc2l2ZSBlbXBsYWNlbWVudC4gUHJvamVjdHMgYSBkZXZhc3RhdGluZywgcHVsc2F0aW5nIGhlYXRyYXkuJyxoZWFsdGg9MjIwMDAsbWV0YWxjb3N0PTY1NzYwLGVuZXJneWNvc3Q9MTk4NjUwMCxidWlsZHRpbWU9MTgwMDAwLGZvb3RwcmludHg9Nixmb290cHJpbnR6PTYsaWNvbnR5cGU9ImxlZ2Jhc3Rpb24iLG9iamVjdG5hbWU9J3NjYXZzL3NjYXZiZWFjb25fdDQuczNvJyxzY3JpcHQ9J3NjYXZzL3NjYXZiZWFjb24uY29iJyxidWlsZHBpYz0nc2NhdmVuZ2Vycy9TQ0FWQkVBQ09OLkREUycsZGFtYWdlbW9kaWZpZXI9MC4yMCxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdMZWdlbmRhcnkgQmFzdGlvbicsaTE4bl9lbl90b29sdGlwPSdQcm9qZWN0cyBhIGRldmFzdGF0aW5nLCBwdWxzYXRpbmcgcHVycGxlIGhlYXRyYXkuJyxtYXhyYW5nZT0xNDUwLHRlY2hsZXZlbD00fSx3ZWFwb25kZWZzPXtsZWdlbmRhcnlfYmFzdGlvbl9yYXk9e2FyZWFvZmVmZmVjdD02NCxjb2xsaWRlZnJpZW5kbHk9MCxjb2xsaWRlZmVhdHVyZT0wLGF2b2lkZmVhdHVyZT0wLGF2b2lkZnJpZW5kbHk9MCxiZWFtdGltZT0wLjMsY2FtZXJhc2hha2U9MCxjb3JldGhpY2tuZXNzPTAuMyxjcmF0ZXJhcmVhb2ZlZmZlY3Q9MTIwLGNyYXRlcmJvb3N0PTAsY3JhdGVybXVsdD0wLGVkZ2VlZmZlY3RpdmVuZXNzPTAuNDUsZW5lcmd5cGVyc2hvdD0zMDAwLGV4cGxvc2lvbmdlbmVyYXRvcj0iY3VzdG9tOmxhc2VyaGl0LW1lZGl1bS1wdXJwbGUiLGZpcmVzdGFydGVyPTkwLGZpcmV0b2xlcmFuY2U9MzAwLGltcHVsc2VmYWN0b3I9MCxsYXNlcmZsYXJlc2l6ZT02LG5hbWU9IkxlZ2VuZGFyeSBIZWF0IFJheSIsbm9zZWxmZGFtYWdlPXRydWUscHJlZGljdGJvb3N0PTAuMyxwcm94aW1pdHlwcmlvcml0eT0xLHJhbmdlPTE0NTAscmVsb2FkdGltZT0wLjMscmdiY29sb3I9IjEuMCAwLjIgMS4wIixyZ2Jjb2xvcjI9IjAuOSAxLjAgMC41Iixzb3VuZGhpdGRyeT0iIixzb3VuZGhpdHdldD0ic2l6emxlIixzb3VuZHN0YXJ0PSJiYW50aGllMiIsc291bmRzdGFydHZvbHVtZT0yNSxzb3VuZHRyaWdnZXI9MSx0aGlja25lc3M9NS41LHR1cnJldD10cnVlLHdlYXBvbnR5cGU9IkJlYW1MYXNlciIsd2VhcG9udmVsb2NpdHk9MTUwMCxhbGxvd05vbkJsb2NraW5nQWltPXRydWUsZGFtYWdlPXtkZWZhdWx0PTI1MDAsdnRvbD0xNX19fSx3ZWFwb25zPXtbMV09e2JhZHRhcmdldGNhdGVnb3J5PSdWVE9MIEdST1VORFNDT1VUJyxkZWY9J2xlZ2VuZGFyeV9iYXN0aW9uX3JheScsb25seXRhcmdldGNhdGVnb3J5PSdTVVJGQUNFJ319fSlhW2RdPWIoYVsnY29yZG9vbXQzJ10se25hbWU9J0xlZ2VuZGFyeSBCdWx3YXJrJyxkZXNjcmlwdGlvbj0nQSBwaW5uYWNsZSBvZiBkZWZlbnNpdmUgdGVjaG5vbG9neSwgdGhlIExlZ2VuZGFyeSBCdWx3YXJrIGFubmloaWxhdGVzIGFsbCB3aG8gYXBwcm9hY2guJyxidWlsZHRpbWU9MjUwMDAwLGhlYWx0aD00MjAwMCxtZXRhbGNvc3Q9NjE2NTAsZW5lcmd5Y29zdD0xNzEyNTAwLGRhbWFnZW1vZGlmaWVyPTAuMTUsZW5lcmd5c3RvcmFnZT01MDAwLHJhZGFyZGlzdGFuY2U9MTQwMCxzaWdodGRpc3RhbmNlPTExMDAsaWNvbnR5cGU9ImNvcmRvb210MyIsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnZW5kYXJ5IEJ1bHdhcmsnLGkxOG5fZW5fdG9vbHRpcD0nVGhlIHVsdGltYXRlIGRlZmVuc2l2ZSBzdHJ1Y3R1cmUuJyxwYXJhbHl6ZW11bHRpcGxpZXI9MC4yLHRlY2hsZXZlbD00fSx3ZWFwb25kZWZzPXtsZWdlbmRhcnlfb3ZlcmxvYWRfc2NhdHRlcj17Y29sbGlkZWZyaWVuZGx5PTAsY29sbGlkZWZlYXR1cmU9MCxhdm9pZGZlYXR1cmU9MCxhdm9pZGZyaWVuZGx5PTAsbmFtZT0nT3ZlcmxvYWQgU2NhdHRlciBCZWFtZXInLHdlYXBvbnR5cGU9J0JlYW1MYXNlcicscmFuZ2U9MTAwMCxyZWxvYWR0aW1lPTAuMSxzcHJheWFuZ2xlPTIwMDAscHJvamVjdGlsZXM9MTIscmdiY29sb3I9JzAuOCAwLjEgMS4wJyxhY2N1cmFjeT01MCxhcmVhb2ZlZmZlY3Q9OCxiZWFtZGVjYXk9MC4wNSxiZWFtdGltZT0wLjEsYmVhbXR0bD0xLGNvcmV0aGlja25lc3M9MC4yNSxidXJuYmxvdz10cnVlLGN5bGluZGVydGFyZ2V0aW5nPTEsZWRnZWVmZmVjdGl2ZW5lc3M9MC4xNSxleHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpsYXNlcmhpdC1tZWRpdW0tcHVycGxlJyxmaXJlc3RhcnRlcj0xMDAsaW1wdWxzZWZhY3Rvcj0wLjEyMyxpbnRlbnNpdHk9MC4zLGxhc2VyZmxhcmVzaXplPTQuMzUsbm9zZWxmZGFtYWdlPXRydWUsc291bmRoaXR3ZXQ9J3NpenpsZScsc291bmRzdGFydD0nYmVhbWVyc2hvdDInLHRvbGVyYW5jZT01MDAwLHRoaWNrbmVzcz02LHR1cnJldD10cnVlLHdlYXBvbnZlbG9jaXR5PTEwMDAsZGFtYWdlPXtkZWZhdWx0PTYwMH19LGxlZ2VuZGFyeV9oZWF0X3JheT17Y29sbGlkZWZyaWVuZGx5PTAsY29sbGlkZWZlYXR1cmU9MCxhdm9pZGZlYXR1cmU9MCxhdm9pZGZyaWVuZGx5PTAsbmFtZT0nQXJtYWdlZGRvbiBIZWF0IFJheScsd2VhcG9udHlwZT0nQmVhbUxhc2VyJyxyYW5nZT0xMzAwLHJlbG9hZHRpbWU9NC4wLGFyZWFvZmVmZmVjdD03MixiZWFtdGltZT0wLjYsY2FtZXJhU2hha2U9MzUwLGNvcmV0aGlja25lc3M9MC40MCxjcmF0ZXJhcmVhb2ZlZmZlY3Q9NzIsZW5lcmd5cGVyc2hvdD0xMjAwLGV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOmdlbmVyaWNzaGVsbGV4cGxvc2lvbi1tZWRpdW0tYmVhbScsaW1wdWxzZWZhY3Rvcj0wLGxhcmdlYmVhbWxhc2VyPXRydWUsbGFzZXJmbGFyZXNpemU9OC44LG5vc2VsZmRhbWFnZT10cnVlLHJnYmNvbG9yPScwLjkgMS4wIDAuNScscmdiY29sb3IyPScwLjggMCAwJyxzY3JvbGxzcGVlZD01LHNvdW5kaGl0ZHJ5PScnLHNvdW5kaGl0d2V0PSdzaXp6bGUnLHNvdW5kc3RhcnQ9J2hlYXRyYXkyeGwnLHNvdW5kdHJpZ2dlcj0xLHRoaWNrbmVzcz03LHRvbGVyYW5jZT0xMDAwMCx0dXJyZXQ9dHJ1ZSx3ZWFwb252ZWxvY2l0eT0xODAwLGRhbWFnZT17ZGVmYXVsdD05MDAwLGNvbW1hbmRlcnM9MTM1MH19LGxlZ2VuZGFyeV9wb2ludF9kZWZlbnNlPXtjb2xsaWRlZnJpZW5kbHk9MCxjb2xsaWRlZmVhdHVyZT0wLGF2b2lkZmVhdHVyZT0wLGF2b2lkZnJpZW5kbHk9MCxuYW1lPSdQb2ludCBEZWZlbnNlIExhc2VyJyx3ZWFwb250eXBlPSdCZWFtTGFzZXInLHJhbmdlPTc1MCxyZWxvYWR0aW1lPTAuNSxhcmVhb2ZlZmZlY3Q9MTIsYmVhbXRpbWU9MC4zLGNvcmV0aGlja25lc3M9MC4zMixlbmVyZ3lwZXJzaG90PTUwMCxleHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpsYXNlcmhpdC1sYXJnZS1ibHVlJyxmaXJlc3RhcnRlcj05MCxpbXBhY3Rvbmx5PTEsaW1wdWxzZWZhY3Rvcj0wLGxhcmdlYmVhbWxhc2VyPXRydWUsbGFzZXJmbGFyZXNpemU9OC44LG5vc2VsZmRhbWFnZT10cnVlLHByb3hpbWl0eXByaW9yaXR5PTAscmdiY29sb3I9JzAgMCAxJyxzb3VuZGhpdGRyeT0nJyxzb3VuZGhpdHdldD0nc2l6emxlJyxzb3VuZHN0YXJ0PSdhbm5pZ3VuMScsc291bmR0cmlnZ2VyPTEsdGV4dHVyZTM9J2xhcmdlYmVhbScsdGhpY2tuZXNzPTUuNSx0aWxlbGVuZ3RoPTE1MCx0b2xlcmFuY2U9MTAwMDAsdHVycmV0PXRydWUsd2VhcG9udmVsb2NpdHk9MTUwMCxkYW1hZ2U9e2RlZmF1bHQ9NDUwLGNvbW1hbmRlcnM9OTk5fX19LHdlYXBvbnM9e1sxXT17ZGVmPSdsZWdlbmRhcnlfb3ZlcmxvYWRfc2NhdHRlcicsb25seXRhcmdldGNhdGVnb3J5PSdTVVJGQUNFJ30sWzJdPXtkZWY9J2xlZ2VuZGFyeV9oZWF0X3JheScsb25seXRhcmdldGNhdGVnb3J5PSdTVVJGQUNFJ30sWzNdPXtkZWY9J2xlZ2VuZGFyeV9wb2ludF9kZWZlbnNlJyxvbmx5dGFyZ2V0Y2F0ZWdvcnk9J1NVUkZBQ0UnfX19KWxvY2FsIGY9eydhcm1hY2EnLCdhcm1hY2snLCdhcm1hY3N1YicsJ2FybWFjdicsJ2NvcmFjYScsJ2NvcmFjaycsJ2NvcmFjc3ViJywnY29yYWN2JywnbGVnYWNhJywnbGVnYWNrJywnbGVnYWN2JywnbGVnY29tdDJjb20nfWZvciBnLGggaW4gcGFpcnN7J2FybScsJ2NvcicsJ2xlZyd9ZG8gZm9yIGk9MywxMCBkbyB0YWJsZS5pbnNlcnQoZixoLi4nY29tbHZsJy4uaSllbmQ7dGFibGUuaW5zZXJ0KGYsaC4uJ3QzYWlyYWlkZScpZW5kO2ZvciBnLGogaW4gcGFpcnMoZilkbyBpZiBhW2pddGhlbiBsb2NhbCBoPXN0cmluZy5zdWIoaiwxLDMpdGFibGUuaW5zZXJ0KGFbal0uYnVpbGRvcHRpb25zLGg9PSdhcm0nYW5kIGMgb3IgaD09J2NvcidhbmQgZCBvciBlKWVuZCBlbmQ