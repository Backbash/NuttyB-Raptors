LS1NaW5pLUJvc3Nlcw0KLS0gQXV0aG9yczogUkNvcmUNCi0tIGRvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xUVNWc3VBQU1oQnJoaVpkVGloVmZTQ3dQemJiWldETEN0WFdQMjNDVTBrbw0KbG9jYWwgYSxiLGMsZCxlPVVuaXREZWZzIG9ye30sdGFibGUubWVyZ2UsdGFibGUuY29weSwncmFwdG9yX21hdHJpYXJjaF9iYXNpYycsJ2N1c3RvbWZ1c2lvbmV4cGxvJ2xvY2FsIGZ1bmN0aW9uIGYoZyxoLGkpaWYgYVtnXWFuZCBub3QgYVtoXXRoZW4gYVtoXT1iKGFbZ10saSBvcnt9KWVuZCBlbmQ7bG9jYWwgaj1hW2RdLmhlYWx0aDtmKCdyYXB0b3JfcXVlZW5fdmVyeWVhc3knLCdyYXB0b3JfbWluaXFfYScse25hbWU9J1F1ZWVubGluZyBQcmltYScsaWNvbnR5cGU9J3JhcHRvcl9xdWVlbl92ZXJ5ZWFzeScsaGVhbHRoPWoqNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdRdWVlbmxpbmcgUHJpbWEnLGkxOG5fZW5fdG9vbHRpcD0nTWFqZXN0aWMgYW5kIGJvbGQsIHJ1bGVyIG9mIHRoZSBodW50Lid9fSlmKCdyYXB0b3JfcXVlZW5fZWFzeScsJ3JhcHRvcl9taW5pcV9iJyx7bmFtZT0nUXVlZW5saW5nIFNlY3VuZGEnLGljb250eXBlPSdyYXB0b3JfcXVlZW5fZWFzeScsaGVhbHRoPWoqNyxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdRdWVlbmxpbmcgU2VjdW5kYScsaTE4bl9lbl90b29sdGlwPSdTd2lmdCBhbmQgc2hhcnAsIGEgbm9ibGUgYW1vbmcgcmFwdG9ycy4nfX0pZigncmFwdG9yX3F1ZWVuX25vcm1hbCcsJ3JhcHRvcl9taW5pcV9jJyx7bmFtZT0nUXVlZW5saW5nIFRlcnRpYScsaWNvbnR5cGU9J3JhcHRvcl9xdWVlbl9ub3JtYWwnLGhlYWx0aD1qKjksY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUXVlZW5saW5nIFRlcnRpYScsaTE4bl9lbl90b29sdGlwPSdSZWZpbmVkIHRhc3Rlcy4gTGlrZXMgaGVyIHByZXkgcmFyZS4nfX0pZm9yIGssbCBpbiBpcGFpcnN7eydyYXB0b3JfbWF0cmlhcmNoX2Jhc2ljJywncmFwdG9yX21hbWFfYmEnLCdNYXRyb25hJywnQ2xhd3MgY2hhcmdlZCB3aXRoIHZlbmdlYW5jZS4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfZmlyZScsJ3JhcHRvcl9tYW1hX2ZpJywnUHlybyBNYXRyb25hJywnQSBmaXJlc3Rvcm0gb2YgbWF0ZXJuYWwgd3JhdGguJ30seydyYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljJywncmFwdG9yX21hbWFfZWwnLCdQYXJhbHl6aW5nIE1hdHJvbmEnLCdDcmFja2xpbmcgd2l0aCByYWdlLCByZWFkeSB0byBzdHJpa2UuJ30seydyYXB0b3JfbWF0cmlhcmNoX2FjaWQnLCdyYXB0b3JfbWFtYV9hYycsJ0FjaWQgTWF0cm9uYScsJ0FjaWQtZnVlbGVkLCBtZWx0aW5nIGV2ZXJ5dGhpbmcgaW4gc2lnaHQuJ319ZG8gZihsWzFdLGxbMl0se25hbWU9bFszXSxpY29udHlwZT1sWzFdLGhlYWx0aD1qKjEuNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPWxbM10saTE4bl9lbl90b29sdGlwPWxbNF19fSllbmQ7ZignY3JpdHRlcl9wZW5ndWlua2luZycsJ3JhcHRvcl9jb25zb3J0Jyx7bmFtZT0nUmFwdG9yIENvbnNvcnQnLGljb250eXBlPSdjb3Jrb3JnJyxoZWFsdGg9aio0LG1hc3M9MTAwMDAwLHNvbmFyc3RlYWx0aD1mYWxzZSxzdGVhbHRoPWZhbHNlLHNwZWVkPTY3LjUsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUmFwdG9yIENvbnNvcnQnLGkxOG5fZW5fdG9vbHRpcD0nU25lYWt5IHBvd2VyZnVsIGxpdHRsZSB0ZXJyb3IuJ319KWEucmFwdG9yX2NvbnNvcnQud2VhcG9uZGVmcy5tZWxlZT1jKGFbZF0ud2VhcG9uZGVmcy5tZWxlZSlsb2NhbCBmdW5jdGlvbiBtKG4sbyxwLHEscixzKXJldHVybntyYXB0b3JjdXN0b21zcXVhZD10cnVlLHJhcHRvcnNxdWFkdW5pdHNhbW91bnQ9ciBvciAxLHJhcHRvcnNxdWFkbWluYW5nZXI9bixyYXB0b3JzcXVhZG1heGFuZ2VyPW8scmFwdG9yc3F1YWR3ZWlnaHQ9cyBvciAxLHJhcHRvcnNxdWFkcmFyaXR5PXEgb3InYmFzaWMnLHJhcHRvcnNxdWFkYmVoYXZpb3I9cCxyYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2U9NTAwLHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2U9MC43NX1lbmQ7bG9jYWwgdD17c2VsZmRlc3RydWN0YXM9ZSxleHBsb2RlYXM9ZSxtYXh0aGlzdW5pdD00LHdlYXBvbmRlZnM9e3llbGxvd19taXNzaWxlPXtkYW1hZ2U9e2RlZmF1bHQ9MSx2dG9sPTEwMDB9fX19Zm9yIHUsdiBpbiBwYWlyc3tjb3Jjb21sdmw0PXt3ZWFwb25kZWZzPXtkaXNpbnRlZ3JhdG9yeGw9e2RhbWFnZT17Y29tbWFuZGVycz0wLGRlZmF1bHQ9OTk5OTksc2NhdmJvc3M9MTAwMCxyYXB0b3JxdWVlbj0yMDAwMH19fX0scmFwdG9yX21pbmlxX2E9Yih0LHtjdXN0b21wYXJhbXM9bSg3MCw4MCwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTc1MH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NDAwMH19fX0pLHJhcHRvcl9taW5pcV9iPWIodCx7Y3VzdG9tcGFyYW1zPW0oODUsOTUsJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD0xNTAwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03MDAwfX19fSkscmFwdG9yX21pbmlxX2M9Yih0LHtjdXN0b21wYXJhbXM9bSgxMDAsMTI1LCdiZXJzZXJrJyksd2VhcG9uZGVmcz17Z29vPXtkYW1hZ2U9e2RlZmF1bHQ9MzAwMH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9MTAwMDB9fX19KSxyYXB0b3JfY29uc29ydD17ZXhwbG9kZWFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJyxtYXh0aGlzdW5pdD04LGN1c3RvbXBhcmFtcz1tKDg1LDEwMDAsJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtleWVsYXNlcj17cmFuZ2U9ODAwLHJlbG9hZHRpbWU9MixkYW1hZ2U9e2NvbW1hbmRlcnM9NjAwMCxkZWZhdWx0PTYwMDB9fSxtZWxlZT17bmFtZT0nUm95YWwgQmVhayBBdHRhY2snLHJhbmdlPTMwMCxzb3VuZHN0YXJ0PSdwZW5zcXVhd2sxJyxkYW1hZ2U9e2RlZmF1bHQ9MTAwMH19fSx3ZWFwb25zPXtbMl09e2RlZj0nbWVsZWUnLG1haW5kaXI9JzAgMCAxJyxtYXhhbmdsZWRpZj0xNTV9fX0scmFwdG9yX21hbWFfYmE9e21heHRoaXN1bml0PTQsY3VzdG9tcGFyYW1zPW0oNTUsODQsJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD03NTB9fSxtZWxlZT17ZGFtYWdlPXtkZWZhdWx0PTc1MH19fX0scmFwdG9yX21hbWFfZmk9e2V4cGxvZGVhcz0ncmFwdG9yX2VtcGRlYXRoX2JpZycsbWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9bSg1NSw4NCwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2ZsYW1ldGhyb3dlcnNwaWtlPXtkYW1hZ2U9e2RlZmF1bHQ9MTIwfX0sZmxhbWV0aHJvd2VybWFpbj17ZGFtYWdlPXtkZWZhdWx0PTI0MH19fX0scmFwdG9yX21hbWFfZWw9e21heHRoaXN1bml0PTQsY3VzdG9tcGFyYW1zPW0oNjAsMTAwMCwnYmVyc2VyaycpfSxyYXB0b3JfbWFtYV9hYz17bWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9bSg2NSwxMDAwLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17bWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03NTB9fX19LHJhcHRvcl9sYW5kX2Fzc2F1bHRfYmFzaWNfdDRfdjI9e21heHRoaXN1bml0PTgsY3VzdG9tcGFyYW1zPW0oMzMsNTAsJ3JhaWRlcicpfSxyYXB0b3JfbGFuZF9hc3NhdWx0X2Jhc2ljX3Q0X3YxPXttYXh0aGlzdW5pdD0xNixjdXN0b21wYXJhbXM9bSg1MSw2OSwncmFpZGVyJywnYmFzaWMnLDIpfX1kbyBhW3VdPWFbdV1vcnt9dGFibGUubWVyZ2VJblBsYWNlKGFbdV0sdix0cnVlKWVuZA