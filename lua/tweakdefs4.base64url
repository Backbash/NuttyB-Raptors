LS1NaW5pLUJvc3NlcyB2Mg0KLS0gQXV0aG9yczogUkNvcmUNCi0tIGRvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xUVNWc3VBQU1oQnJoaVpkVGloVmZTQ3dQemJiWldETEN0WFdQMjNDVTBrbw0KbG9jYWwgYSxiLGMsZCxlLGY9VW5pdERlZnMgb3J7fSx0YWJsZS5tZXJnZSx0YWJsZS5jb3B5LCdyYXB0b3JfbWF0cmlhcmNoX2Jhc2ljJywnY3VzdG9tZnVzaW9uZXhwbG8nLFNwcmluZztsb2NhbCBnLGg9MS4wLDEuMDtkbyBsb2NhbCBpPWYuR2V0TW9kT3B0aW9ucygpb3J7fWxvY2FsIGZ1bmN0aW9uIGooayxsKWxvY2FsIG09aVtrXWlmIG0gYW5kIG1-PSIidGhlbiBsb2NhbCBuLG89cGNhbGwoc3RyaW5nLmJhc2U2NERlY29kZSxtKWlmIG4gYW5kIG8gdGhlbiByZXR1cm4gdG9udW1iZXIoc3RyaW5nLm1hdGNoKG8sbCkpb3IgMS4wIGVuZCBlbmQ7cmV0dXJuIDEuMCBlbmQ7Zz1qKCd0d2Vha2RlZnMxJywiKCVkKyUuPyVkKilYIFFIUCIpaD1qKCd0d2Vha2RlZnMyJywiKCVkKyUuPyVkKilYIEhQIillbmQ7bG9jYWwgcD0xO2lmIGYuVXRpbGl0aWVzLkdhbWV0eXBlLklzUmFwdG9ycygpdGhlbiBwPSgjZi5HZXRUZWFtTGlzdCgpLTIpLzEyIGVuZDtsb2NhbCBmdW5jdGlvbiBxKHIpcmV0dXJuIG1hdGgubWF4KDEsbWF0aC5jZWlsKHIqcCkpZW5kO2xvY2FsIHM9ezcwLDg1LDkwLDEwNSwxMTAsMTI1fWxvY2FsIHQ9bWF0aC5tYXgoMSxmLkdldE1vZE9wdGlvbnMoKS5yYXB0b3JfcXVlZW50aW1lbXVsdCBvciAxLjMpbG9jYWwgdSx2PXNbMV0sc1sjc11sb2NhbCB3PXQqc1sjc10vMS4zO2xvY2FsIHg9KHctdSkvKHYtdSlmb3IgeT0yLCNzIGRvIHNbeV09bWF0aC5mbG9vcih1KyhzW3ldLXUpKngpZW5kO2xvY2FsIHo9Zi5HZXRNb2RPcHRpb25zKCkucmFwdG9yX3F1ZWVuX2NvdW50IG9yIDE7bG9jYWwgQT0xO2lmIGc-MS4zIHRoZW4gQT1tYXRoLm1pbigxMCxnLzEuMyowLjkpZW5kO2xvY2FsIEI9bWF0aC5jZWlsKEEqOCoxLjA2Xm1hdGgubWF4KDAsei04KSlsb2NhbCBDPXQqMTAwK0I7bG9jYWwgZnVuY3Rpb24gRChFLEYsRylpZiBhW0VdYW5kIG5vdCBhW0ZddGhlbiBhW0ZdPWIoYVtFXSxHIG9ye30pZW5kIGVuZDtsb2NhbCBIPWFbZF0uaGVhbHRoO0QoJ3JhcHRvcl9xdWVlbl92ZXJ5ZWFzeScsJ3JhcHRvcl9taW5pcV9hJyx7bmFtZT0nUXVlZW5saW5nIFByaW1hJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX3ZlcnllYXN5JyxoZWFsdGg9SCo1LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBQcmltYScsaTE4bl9lbl90b29sdGlwPSdNYWplc3RpYyBhbmQgYm9sZCwgcnVsZXIgb2YgdGhlIGh1bnQuJ319KUQoJ3JhcHRvcl9xdWVlbl9lYXN5JywncmFwdG9yX21pbmlxX2InLHtuYW1lPSdRdWVlbmxpbmcgU2VjdW5kYScsaWNvbnR5cGU9J3JhcHRvcl9xdWVlbl9lYXN5JyxoZWFsdGg9SCo3LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBTZWN1bmRhJyxpMThuX2VuX3Rvb2x0aXA9J1N3aWZ0IGFuZCBzaGFycCwgYSBub2JsZSBhbW9uZyByYXB0b3JzLid9fSlEKCdyYXB0b3JfcXVlZW5fbm9ybWFsJywncmFwdG9yX21pbmlxX2MnLHtuYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX25vcm1hbCcsaGVhbHRoPUgqOSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpMThuX2VuX3Rvb2x0aXA9J1JlZmluZWQgdGFzdGVzLiBMaWtlcyBoZXIgcHJleSByYXJlLid9fSlmb3IgSSxKIGluIGlwYWlyc3t7J3JhcHRvcl9tYXRyaWFyY2hfYmFzaWMnLCdyYXB0b3JfbWFtYV9iYScsJ01hdHJvbmEnLCdDbGF3cyBjaGFyZ2VkIHdpdGggdmVuZ2VhbmNlLid9LHsncmFwdG9yX21hdHJpYXJjaF9maXJlJywncmFwdG9yX21hbWFfZmknLCdQeXJvIE1hdHJvbmEnLCdBIGZpcmVzdG9ybSBvZiBtYXRlcm5hbCB3cmF0aC4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMnLCdyYXB0b3JfbWFtYV9lbCcsJ1BhcmFseXppbmcgTWF0cm9uYScsJ0NyYWNrbGluZyB3aXRoIHJhZ2UsIHJlYWR5IHRvIHN0cmlrZS4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfYWNpZCcsJ3JhcHRvcl9tYW1hX2FjJywnQWNpZCBNYXRyb25hJywnQWNpZC1mdWVsZWQsIG1lbHRpbmcgZXZlcnl0aGluZyBpbiBzaWdodC4nfX1kbyBEKEpbMV0sSlsyXSx7bmFtZT1KWzNdLGljb250eXBlPUpbMV0saGVhbHRoPUgqMS41LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9SlszXSxpMThuX2VuX3Rvb2x0aXA9Sls0XX19KWVuZDtEKCdjcml0dGVyX3Blbmd1aW5raW5nJywncmFwdG9yX2NvbnNvcnQnLHtuYW1lPSdSYXB0b3IgQ29uc29ydCcsaWNvbnR5cGU9J2NvcmtvcmcnLGhlYWx0aD1IKjQsbWFzcz0xMDAwMDAsc29uYXJzdGVhbHRoPWZhbHNlLHN0ZWFsdGg9ZmFsc2Usc3BlZWQ9NjcuNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdSYXB0b3IgQ29uc29ydCcsaTE4bl9lbl90b29sdGlwPSdTbmVha3kgcG93ZXJmdWwgbGl0dGxlIHRlcnJvci4nfX0pYS5yYXB0b3JfY29uc29ydC53ZWFwb25kZWZzLm1lbGVlPWMoYVtkXS53ZWFwb25kZWZzLm1lbGVlKUQoJ3JhcHRvcl9jb25zb3J0JywncmFwdG9yX2Rvb21icmluZ2VyJyx7bmFtZT0nRG9vbWJyaW5nZXInLGljb250eXBlPSdhcm1hZnVzdDMnLGhlYWx0aD1IKjEyLHNwZWVkPTUwLGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0Rvb21icmluZ2VyJyxpMThuX2VuX3Rvb2x0aXA9J1lvdXIgdGltZSBpcyB1cC4gVGhlIFF1ZWVucyBjYWxsZWQgZm9yIGJhY2t1cC4nfX0pYS5yYXB0b3JfZG9vbWJyaW5nZXIud2VhcG9uZGVmcy5tZWxlZT1jKGFbZF0ud2VhcG9uZGVmcy5tZWxlZSlsb2NhbCBmdW5jdGlvbiBLKEwsTSxOLE8sUCxRKXJldHVybntyYXB0b3JjdXN0b21zcXVhZD10cnVlLHJhcHRvcnNxdWFkdW5pdHNhbW91bnQ9UCBvciAxLHJhcHRvcnNxdWFkbWluYW5nZXI9TCxyYXB0b3JzcXVhZG1heGFuZ2VyPU0scmFwdG9yc3F1YWR3ZWlnaHQ9USBvciA1LHJhcHRvcnNxdWFkcmFyaXR5PU8gb3InYmFzaWMnLHJhcHRvcnNxdWFkYmVoYXZpb3I9TixyYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2U9NTAwLHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2U9MC43NX1lbmQ7bG9jYWwgUj17c2VsZmRlc3RydWN0YXM9ZSxleHBsb2RlYXM9ZSxtYXh0aGlzdW5pdD1xKDMpLHdlYXBvbmRlZnM9e3llbGxvd19taXNzaWxlPXtkYW1hZ2U9e2RlZmF1bHQ9MSx2dG9sPTEwMDB9fX19Zm9yIFMsVCBpbiBwYWlyc3tyYXB0b3JfbWluaXFfYT1iKFIse2N1c3RvbXBhcmFtcz1LKHNbMV0sc1syXSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTc1MH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NDAwMH19fX0pLHJhcHRvcl9taW5pcV9iPWIoUix7Y3VzdG9tcGFyYW1zPUsoc1szXSxzWzRdLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17Z29vPXtkYW1hZ2U9e2RlZmF1bHQ9MTUwMH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NzAwMH19fX0pLHJhcHRvcl9taW5pcV9jPWIoUix7bWF4dGhpc3VuaXQ9cSg0KSxjdXN0b21wYXJhbXM9SyhzWzVdLHNbNl0sJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD0zMDAwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD0xMDAwMH19fX0pLHJhcHRvcl9jb25zb3J0PXtleHBsb2RlYXM9J3JhcHRvcl9lbXBkZWF0aF9iaWcnLG1heHRoaXN1bml0PXEoOCksY3VzdG9tcGFyYW1zPUsoc1syXSwxMDAwLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17ZXllbGFzZXI9e25hbWU9J0xhc2VyIEV5ZXMnLGFyZWFvZmVmZmVjdD0xNixyZWxvYWR0aW1lPTIscmdiY29sb3I9JzEgMCAwLjMnLHJhbmdlPTgwMCxkYW1hZ2U9e2RlZmF1bHQ9NjAwMH19LG1lbGVlPXtuYW1lPSdBcmlzdG9jcmF0aWMgQmVhaycsc291bmRzdGFydD0ncGVuc3F1YXdrMScscmFuZ2U9MzAwLHJlbG9hZHRpbWU9MixkYW1hZ2U9e2RlZmF1bHQ9MjAwMH19fSx3ZWFwb25zPXtbMV09e2RlZj0iZXllbGFzZXIiLGJhZHRhcmdldGNhdGVnb3J5PSJWVE9MIn0sWzJdPXtkZWY9J21lbGVlJyxtYWluZGlyPScwIDAgMScsbWF4YW5nbGVkaWY9MTU1fX19LHJhcHRvcl9kb29tYnJpbmdlcj17ZXhwbG9kZWFzPSJTY2F2Q29tQm9zc0V4cGxvIixtYXh0aGlzdW5pdD1xKDE4KSxjdXN0b21wYXJhbXM9SyhDLDEwMDAsJ3JhaWRlcicsbmlsLDMsOTkpLHdlYXBvbmRlZnM9e2V5ZWxhc2VyPXtuYW1lPSdFeWVzIG9mIERvb20nLGFyZWFvZmVmZmVjdD0zMixyZWxvYWR0aW1lPTIscmdiY29sb3I9JzAuMyAxIDAnLHJhbmdlPTgwMCxkYW1hZ2U9e2RlZmF1bHQ9NDgwMDB9fSxtZWxlZT17bmFtZT0nQXBvY2FseXB0aWMgQmVhaycsc291bmRzdGFydD0ncGVuYnJheTInLHJhbmdlPTMwMCxyZWxvYWR0aW1lPTIsZGFtYWdlPXtkZWZhdWx0PTQ4MDAwfX19LHdlYXBvbnM9e1sxXT17ZGVmPSJleWVsYXNlciIsYmFkdGFyZ2V0Y2F0ZWdvcnk9IiJ9LFsyXT17ZGVmPSdtZWxlZScsbWFpbmRpcj0nMCAwIDEnLG1heGFuZ2xlZGlmPTE1NX19fSxyYXB0b3JfbWFtYV9iYT17bWF4dGhpc3VuaXQ9cSg0KSxjdXN0b21wYXJhbXM9Syg1NSxzWzNdLTEsJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD03NTB9fSxtZWxlZT17ZGFtYWdlPXtkZWZhdWx0PTc1MH19fX0scmFwdG9yX21hbWFfZmk9e2V4cGxvZGVhcz0ncmFwdG9yX2VtcGRlYXRoX2JpZycsbWF4dGhpc3VuaXQ9cSg0KSxjdXN0b21wYXJhbXM9Syg1NSxzWzNdLTEsJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtmbGFtZXRocm93ZXJzcGlrZT17ZGFtYWdlPXtkZWZhdWx0PTEyMH19LGZsYW1ldGhyb3dlcm1haW49e2RhbWFnZT17ZGVmYXVsdD0yNDB9fX19LHJhcHRvcl9tYW1hX2VsPXttYXh0aGlzdW5pdD1xKDQpLGN1c3RvbXBhcmFtcz1LKDY1LDEwMDAsJ2JlcnNlcmsnKX0scmFwdG9yX21hbWFfYWM9e21heHRoaXN1bml0PXEoNCksY3VzdG9tcGFyYW1zPUsoNjAsMTAwMCwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e21lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NzUwfX19fSxyYXB0b3JfbGFuZF9hc3NhdWx0X2Jhc2ljX3Q0X3YyPXttYXh0aGlzdW5pdD1xKDgpLGN1c3RvbXBhcmFtcz1LKDMzLDUwLCdyYWlkZXInKX0scmFwdG9yX2xhbmRfYXNzYXVsdF9iYXNpY190NF92MT17bWF4dGhpc3VuaXQ9cSgxMiksY3VzdG9tcGFyYW1zPUsoNTEsNjQsJ3JhaWRlcicsJ2Jhc2ljJywyKX19ZG8gYVtTXT1hW1Ndb3J7fXRhYmxlLm1lcmdlSW5QbGFjZShhW1NdLFQsdHJ1ZSllbmQ7bG9jYWwgVT17cmFwdG9yX21hbWFfYmE9MzYwMDAscmFwdG9yX21hbWFfZmk9MzYwMDAscmFwdG9yX21hbWFfZWw9MzYwMDAscmFwdG9yX21hbWFfYWM9MzYwMDAscmFwdG9yX2NvbnNvcnQ9NDUwMDAscmFwdG9yX2Rvb21icmluZ2VyPTkwMDAwfWxvY2FsIFY9VW5pdERlZl9Qb3N0O2Z1bmN0aW9uIFVuaXREZWZfUG9zdChMLFcpaWYgViB0aGVuIFYoTCxXKWVuZDtsb2NhbCBYPTE7aWYgaD4xLjMgdGhlbiBYPWgvMS4zIGVuZDtmb3IgWSxaIGluIHBhaXJzKFUpZG8gaWYgVW5pdERlZnNbWV10aGVuIGxvY2FsIF89bWF0aC5mbG9vcihaKlgpVW5pdERlZnNbWV0ubWV0YWxjb3N0PV8gZW5kIGVuZCBlbmQ