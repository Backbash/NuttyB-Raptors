LS0gTWluaS1Cb3NzZXMNCmxvY2FsIGE9VW5pdERlZnMgb3J7fWxvY2FsIGI9dGFibGUubWVyZ2U7bG9jYWwgYz0icmFwdG9yX21hdHJpYXJjaF9iYXNpYyJsb2NhbCBmdW5jdGlvbiBkKGUsZixnKWlmIGFbZV1hbmQgbm90IGFbZl10aGVuIGFbZl09YihhW2VdLGcgb3J7fSllbmQgZW5kO2xvY2FsIGZ1bmN0aW9uIGgoaSlpZiB0eXBlKGkpfj0idGFibGUidGhlbiByZXR1cm4gaSBlbmQ7bG9jYWwgaj17fWZvciBrLGwgaW4gcGFpcnMoaSlkbyBqW2goayldPWgobCllbmQ7cmV0dXJuIHNldG1ldGF0YWJsZShqLGgoZ2V0bWV0YXRhYmxlKGkpKSllbmQ7bG9jYWwgbT1hW2NdLmhlYWx0aDtkKCJyYXB0b3JfcXVlZW5fdmVyeWVhc3kiLCJyYXB0b3JfbWluaXFfYSIse25hbWU9IlF1ZWVubGluZyBQcmltYSIsaWNvbnR5cGU9InJhcHRvcl9xdWVlbl92ZXJ5ZWFzeSIsaGVhbHRoPW0qNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSJRdWVlbmxpbmcgUHJpbWEiLGkxOG5fZW5fdG9vbHRpcD0iTWFqZXN0aWMgYW5kIGJvbGQsIHJ1bGVyIG9mIHRoZSBodW50LiJ9fSlkKCJyYXB0b3JfcXVlZW5fZWFzeSIsInJhcHRvcl9taW5pcV9iIix7bmFtZT0iUXVlZW5saW5nIFNlY3VuZGEiLGljb250eXBlPSJyYXB0b3JfcXVlZW5fZWFzeSIsaGVhbHRoPW0qNyxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSJRdWVlbmxpbmcgU2VjdW5kYSIsaTE4bl9lbl90b29sdGlwPSJTd2lmdCBhbmQgc2hhcnAsIGEgbm9ibGUgYW1vbmcgcmFwdG9ycy4ifX0pZCgicmFwdG9yX3F1ZWVuX25vcm1hbCIsInJhcHRvcl9taW5pcV9jIix7bmFtZT0iUXVlZW5saW5nIFRlcnRpYSIsaWNvbnR5cGU9InJhcHRvcl9xdWVlbl9ub3JtYWwiLGhlYWx0aD1tKjksY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0iUXVlZW5saW5nIFRlcnRpYSIsaTE4bl9lbl90b29sdGlwPSJSZWZpbmVkIHRhc3Rlcy4gTGlrZXMgaGVyIHByZXkgcmFyZS4ifX0pZm9yIG4sbCBpbiBpcGFpcnN7eyJyYXB0b3JfbWF0cmlhcmNoX2Jhc2ljIiwicmFwdG9yX21hbWFfYmEiLCJNYXRyb25hIiwiQ2xhd3MgY2hhcmdlZCB3aXRoIHZlbmdlYW5jZS4ifSx7InJhcHRvcl9tYXRyaWFyY2hfZmlyZSIsInJhcHRvcl9tYW1hX2ZpIiwiUHlybyBNYXRyb25hIiwiQSBmaXJlc3Rvcm0gb2YgbWF0ZXJuYWwgd3JhdGguIn0seyJyYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljIiwicmFwdG9yX21hbWFfZWwiLCJQYXJhbHl6aW5nIE1hdHJvbmEiLCJDcmFja2xpbmcgd2l0aCByYWdlLCByZWFkeSB0byBzdHJpa2UuIn0seyJyYXB0b3JfbWF0cmlhcmNoX2FjaWQiLCJyYXB0b3JfbWFtYV9hYyIsIkFjaWQgTWF0cm9uYSIsIkFjaWQtZnVlbGVkLCBtZWx0aW5nIGV2ZXJ5dGhpbmcgaW4gc2lnaHQuIn19ZG8gZChsWzFdLGxbMl0se25hbWU9bFszXSxpY29udHlwZT1sWzFdLGhlYWx0aD1tKjEuNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPWxbM10saTE4bl9lbl90b29sdGlwPWxbNF19fSllbmQ7ZCgiY3JpdHRlcl9wZW5ndWlua2luZyIsInJhcHRvcl9jb25zb3J0Iix7bmFtZT0iUmFwdG9yIENvbnNvcnQiLGljb250eXBlPSJjb3Jrb3JnIixoZWFsdGg9bSo0LG1hc3M9MTAwMDAwLHNvbmFyc3RlYWx0aD1mYWxzZSxzdGVhbHRoPWZhbHNlLHNwZWVkPTY3LjUsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0iUmFwdG9yIENvbnNvcnQiLGkxOG5fZW5fdG9vbHRpcD0iU25lYWt5IHBvd2VyZnVsIGxpdHRsZSB0ZXJyb3IuIn19KWEucmFwdG9yX2NvbnNvcnQud2VhcG9uZGVmcy5tZWxlZT1oKGFbY10ud2VhcG9uZGVmcy5tZWxlZSlsb2NhbCBvPWZ1bmN0aW9uKHAscSxlLHIscyx0KXJldHVybntyYXB0b3JjdXN0b21zcXVhZD10cnVlLHJhcHRvcnNxdWFkdW5pdHNhbW91bnQ9cyBvciAxLHJhcHRvcnNxdWFkbWluYW5nZXI9cCxyYXB0b3JzcXVhZG1heGFuZ2VyPXEscmFwdG9yc3F1YWR3ZWlnaHQ9dCBvciAxLHJhcHRvcnNxdWFkcmFyaXR5PXIgb3IiYmFzaWMiLHJhcHRvcnNxdWFkYmVoYXZpb3I9ZSxyYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2U9NTAwLHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2U9MC43NX1lbmQ7Zm9yIGYsdSBpbiBwYWlyc3tjb3Jjb21sdmw0PXt3ZWFwb25kZWZzPXtkaXNpbnRlZ3JhdG9yeGw9e2RhbWFnZT17Y29tbWFuZGVycz0wLGRlZmF1bHQ9OTk5OTksc2NhdmJvc3M9MTAwMCxyYXB0b3JxdWVlbj0yMDAwMH19fX0scmFwdG9yX21pbmlxX2E9e3NlbGZkZXN0cnVjdGFzPSJjdXN0b21mdXNpb25leHBsbyIsZXhwbG9kZWFzPSJjdXN0b21mdXNpb25leHBsbyIsbWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9byg3MCw4MCwiYmVyc2VyayIpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTc1MH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NDAwMH19LHllbGxvd19taXNzaWxlPXtkYW1hZ2U9e2RlZmF1bHQ9MSx2dG9sPTEwMDB9fX19LHJhcHRvcl9taW5pcV9iPXtzZWxmZGVzdHJ1Y3Rhcz0iY3VzdG9tZnVzaW9uZXhwbG8iLGV4cGxvZGVhcz0iY3VzdG9tZnVzaW9uZXhwbG8iLG1heHRoaXN1bml0PTQsY3VzdG9tcGFyYW1zPW8oODUsOTUsImJlcnNlcmsiKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD0xNTAwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03MDAwfX0seWVsbG93X21pc3NpbGU9e2RhbWFnZT17ZGVmYXVsdD0xLHZ0b2w9MTAwMH19fX0scmFwdG9yX21pbmlxX2M9e3NlbGZkZXN0cnVjdGFzPSJjdXN0b21mdXNpb25leHBsbyIsZXhwbG9kZWFzPSJjdXN0b21mdXNpb25leHBsbyIsbWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9bygxMDAsMTI1LCJiZXJzZXJrIiksd2VhcG9uZGVmcz17Z29vPXtkYW1hZ2U9e2RlZmF1bHQ9MzAwMH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9MTAwMDB9fSx5ZWxsb3dfbWlzc2lsZT17ZGFtYWdlPXtkZWZhdWx0PTEsdnRvbD0xMDAwfX19fSxyYXB0b3JfY29uc29ydD17ZXhwbG9kZWFzPSJyYXB0b3JfZW1wZGVhdGhfYmlnIixtYXh0aGlzdW5pdD04LGN1c3RvbXBhcmFtcz1vKDg1LDEwMDAsImJlcnNlcmsiKSx3ZWFwb25kZWZzPXtleWVsYXNlcj17cmFuZ2U9ODAwLHJlbG9hZHRpbWU9MixkYW1hZ2U9e2NvbW1hbmRlcnM9NjAwMCxkZWZhdWx0PTYwMDB9fSxtZWxlZT17bmFtZT0iUm95YWwgQmVhayBBdHRhY2siLHJhbmdlPTMwMCxzb3VuZHN0YXJ0PSJwZW5zcXVhd2sxIixkYW1hZ2U9e2RlZmF1bHQ9MTAwMH19fSx3ZWFwb25zPXtbMl09e2RlZj0ibWVsZWUiLG1haW5kaXI9IjAgMCAxIixtYXhhbmdsZWRpZj0xNTV9fX0scmFwdG9yX21hbWFfYmE9e21heHRoaXN1bml0PTQsY3VzdG9tcGFyYW1zPW8oNTUsODQsImJlcnNlcmsiKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD03NTB9fSxtZWxlZT17ZGFtYWdlPXtkZWZhdWx0PTc1MH19fX0scmFwdG9yX21hbWFfZmk9e2V4cGxvZGVhcz0icmFwdG9yX2VtcGRlYXRoX2JpZyIsbWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9byg1NSw4NCwiYmVyc2VyayIpLHdlYXBvbmRlZnM9e2ZsYW1ldGhyb3dlcnNwaWtlPXtkYW1hZ2U9e2RlZmF1bHQ9MTIwfX0sZmxhbWV0aHJvd2VybWFpbj17ZGFtYWdlPXtkZWZhdWx0PTI0MH19fX0scmFwdG9yX21hbWFfZWw9e21heHRoaXN1bml0PTQsY3VzdG9tcGFyYW1zPW8oNjAsMTAwMCwiYmVyc2VyayIpfSxyYXB0b3JfbWFtYV9hYz17bWF4dGhpc3VuaXQ9NCxjdXN0b21wYXJhbXM9byg2NSwxMDAwLCJiZXJzZXJrIiksd2VhcG9uZGVmcz17bWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03NTB9fX19LHJhcHRvcl9sYW5kX2Fzc2F1bHRfYmFzaWNfdDRfdjI9e21heHRoaXN1bml0PTgsY3VzdG9tcGFyYW1zPW8oMzMsNTAsInJhaWRlciIpfSxyYXB0b3JfbGFuZF9hc3NhdWx0X2Jhc2ljX3Q0X3YxPXttYXh0aGlzdW5pdD0xNixjdXN0b21wYXJhbXM9byg1MSw2OSwicmFpZGVyIiwiYmFzaWMiLDIpfX1kbyBhW2ZdPWFbZl1vcnt9dGFibGUubWVyZ2VJblBsYWNlKGFbZl0sdSx0cnVlKWVuZA