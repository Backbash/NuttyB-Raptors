LS1NaW5pIEJvc3NlcyB2MmINCi0tIEF1dGhvcnM6IFJDb3JlDQotLSBkb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVFTVnN1QUFNaEJyaGlaZFRpaFZmU0N3UHpiYlpXRExDdFhXUDIzQ1Uwa28NCmxvY2FsIGEsYixjLGQsZSxmPVVuaXREZWZzIG9ye30sdGFibGUubWVyZ2UsdGFibGUuY29weSwncmFwdG9yX21hdHJpYXJjaF9iYXNpYycsJ2N1c3RvbWZ1c2lvbmV4cGxvJyxTcHJpbmc7bG9jYWwgZyxoPTEuMywxLjM7aD1hW2RdLmhlYWx0aC82MDAwMDtnPWFbJ3JhcHRvcl9xdWVlbl9lcGljJ10uaGVhbHRoLzEyNTAwMDA7bG9jYWwgaT0xO2lmIGYuVXRpbGl0aWVzLkdhbWV0eXBlLklzUmFwdG9ycygpdGhlbiBpPSgjZi5HZXRUZWFtTGlzdCgpLTIpLzEyIGVuZDtsb2NhbCBqPWYuR2V0TW9kT3B0aW9ucygpLnJhcHRvcl9zcGF3bmNvdW50bXVsdCBvciAzO2xvY2FsIGs9aSpqLzM7bG9jYWwgZnVuY3Rpb24gbChtKXJldHVybiBtYXRoLm1heCgxLG1hdGguY2VpbChtKmspKWVuZDtsb2NhbCBuPXs3MCw4NSw5MCwxMDUsMTEwLDEyNX1sb2NhbCBvPW1hdGgubWF4KDEsZi5HZXRNb2RPcHRpb25zKCkucmFwdG9yX3F1ZWVudGltZW11bHQgb3IgMS4zKWxvY2FsIHAscT1uWzFdLG5bI25dbG9jYWwgcj1vKm5bI25dLzEuMztsb2NhbCBzPShyLXApLyhxLXApZm9yIHQ9MiwjbiBkbyBuW3RdPW1hdGguZmxvb3IocCsoblt0XS1wKSpzKWVuZDtsb2NhbCB1PWYuR2V0TW9kT3B0aW9ucygpLnJhcHRvcl9xdWVlbl9jb3VudCBvciAxO2xvY2FsIHY9MTtpZiBnPjEuMyB0aGVuIHY9bWF0aC5taW4oMTAsZy8xLjMqMC45KWVuZDtsb2NhbCB3PW1hdGguY2VpbCh2KjgqMS4wNl5tYXRoLm1heCgwLHUtOCkpbG9jYWwgeD1vKjEwMCt3O2xvY2FsIHk9bWF0aC5tYXgoMyxsKG1hdGguZmxvb3IoKDIxKnUrMzYpLzE5KSkpbG9jYWwgZnVuY3Rpb24geihBLEIsQylpZiBhW0FdYW5kIG5vdCBhW0JddGhlbiBhW0JdPWIoYVtBXSxDIG9ye30pZW5kIGVuZDtsb2NhbCBEPWFbZF0uaGVhbHRoO3ooJ3JhcHRvcl9xdWVlbl92ZXJ5ZWFzeScsJ3JhcHRvcl9taW5pcV9hJyx7bmFtZT0nUXVlZW5saW5nIFByaW1hJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX3ZlcnllYXN5JyxoZWFsdGg9RCo1LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBQcmltYScsaTE4bl9lbl90b29sdGlwPSdNYWplc3RpYyBhbmQgYm9sZCwgcnVsZXIgb2YgdGhlIGh1bnQuJ319KXooJ3JhcHRvcl9xdWVlbl9lYXN5JywncmFwdG9yX21pbmlxX2InLHtuYW1lPSdRdWVlbmxpbmcgU2VjdW5kYScsaWNvbnR5cGU9J3JhcHRvcl9xdWVlbl9lYXN5JyxoZWFsdGg9RCo3LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBTZWN1bmRhJyxpMThuX2VuX3Rvb2x0aXA9J1N3aWZ0IGFuZCBzaGFycCwgYSBub2JsZSBhbW9uZyByYXB0b3JzLid9fSl6KCdyYXB0b3JfcXVlZW5fbm9ybWFsJywncmFwdG9yX21pbmlxX2MnLHtuYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX25vcm1hbCcsaGVhbHRoPUQqOSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpMThuX2VuX3Rvb2x0aXA9J1JlZmluZWQgdGFzdGVzLiBMaWtlcyBoZXIgcHJleSByYXJlLid9fSlmb3IgRSxGIGluIGlwYWlyc3t7J3JhcHRvcl9tYXRyaWFyY2hfYmFzaWMnLCdyYXB0b3JfbWFtYV9iYScsJ01hdHJvbmEnLCdDbGF3cyBjaGFyZ2VkIHdpdGggdmVuZ2VhbmNlLid9LHsncmFwdG9yX21hdHJpYXJjaF9maXJlJywncmFwdG9yX21hbWFfZmknLCdQeXJvIE1hdHJvbmEnLCdBIGZpcmVzdG9ybSBvZiBtYXRlcm5hbCB3cmF0aC4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMnLCdyYXB0b3JfbWFtYV9lbCcsJ1BhcmFseXppbmcgTWF0cm9uYScsJ0NyYWNrbGluZyB3aXRoIHJhZ2UsIHJlYWR5IHRvIHN0cmlrZS4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfYWNpZCcsJ3JhcHRvcl9tYW1hX2FjJywnQWNpZCBNYXRyb25hJywnQWNpZC1mdWVsZWQsIG1lbHRpbmcgZXZlcnl0aGluZyBpbiBzaWdodC4nfX1kbyB6KEZbMV0sRlsyXSx7bmFtZT1GWzNdLGljb250eXBlPUZbMV0saGVhbHRoPUQqMS41LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9RlszXSxpMThuX2VuX3Rvb2x0aXA9Rls0XX19KWVuZDt6KCdjcml0dGVyX3Blbmd1aW5raW5nJywncmFwdG9yX2NvbnNvcnQnLHtuYW1lPSdSYXB0b3IgQ29uc29ydCcsaWNvbnR5cGU9J2NvcmtvcmcnLGhlYWx0aD1EKjQsbWFzcz0xMDAwMDAsbm9jaGFzZWNhdGVnb3J5PSJNT0JJTEUgVlRPTCBPQkpFQ1QiLHNvbmFyc3RlYWx0aD1mYWxzZSxzdGVhbHRoPWZhbHNlLHNwZWVkPTY3LjUsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUmFwdG9yIENvbnNvcnQnLGkxOG5fZW5fdG9vbHRpcD0nU25lYWt5IHBvd2VyZnVsIGxpdHRsZSB0ZXJyb3IuJ319KWEucmFwdG9yX2NvbnNvcnQud2VhcG9uZGVmcy5nb289YyhhWydyYXB0b3JfcXVlZW5fZXBpYyddLndlYXBvbmRlZnMuZ29vKXooJ3JhcHRvcl9jb25zb3J0JywncmFwdG9yX2Rvb21icmluZ2VyJyx7bmFtZT0nRG9vbWJyaW5nZXInLGljb250eXBlPSdhcm1hZnVzdDMnLGhlYWx0aD1EKjEyLHNwZWVkPTUwLGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0Rvb21icmluZ2VyJyxpMThuX2VuX3Rvb2x0aXA9J1lvdXIgdGltZSBpcyB1cC4gVGhlIFF1ZWVucyBjYWxsZWQgZm9yIGJhY2t1cC4nfX0pbG9jYWwgZnVuY3Rpb24gRyhILEksSixLLEwsTSlyZXR1cm57cmFwdG9yY3VzdG9tc3F1YWQ9dHJ1ZSxyYXB0b3JzcXVhZHVuaXRzYW1vdW50PUwgb3IgMSxyYXB0b3JzcXVhZG1pbmFuZ2VyPUgscmFwdG9yc3F1YWRtYXhhbmdlcj1JLHJhcHRvcnNxdWFkd2VpZ2h0PU0gb3IgNSxyYXB0b3JzcXVhZHJhcml0eT1LIG9yJ2Jhc2ljJyxyYXB0b3JzcXVhZGJlaGF2aW9yPUoscmFwdG9yc3F1YWRiZWhhdmlvcmRpc3RhbmNlPTUwMCxyYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlPTAuNzV9ZW5kO2xvY2FsIE49e3NlbGZkZXN0cnVjdGFzPWUsZXhwbG9kZWFzPWUsbWF4dGhpc3VuaXQ9bCgzKSx3ZWFwb25kZWZzPXt5ZWxsb3dfbWlzc2lsZT17ZGFtYWdlPXtkZWZhdWx0PTEsdnRvbD0xMDAwfX19fWZvciBPLFAgaW4gcGFpcnN7cmFwdG9yX21pbmlxX2E9YihOLHtjdXN0b21wYXJhbXM9RyhuWzFdLG5bMl0sJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD03NTB9fSxtZWxlZT17ZGFtYWdlPXtkZWZhdWx0PTQwMDB9fX19KSxyYXB0b3JfbWluaXFfYj1iKE4se2N1c3RvbXBhcmFtcz1HKG5bM10sbls0XSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTE1MDB9fSxtZWxlZT17ZGFtYWdlPXtkZWZhdWx0PTcwMDB9fX19KSxyYXB0b3JfbWluaXFfYz1iKE4se21heHRoaXN1bml0PWwoNCksY3VzdG9tcGFyYW1zPUcobls1XSxuWzZdLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17Z29vPXtkYW1hZ2U9e2RlZmF1bHQ9MzAwMH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9MTAwMDB9fX19KSxyYXB0b3JfY29uc29ydD17ZXhwbG9kZWFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJyxtYXh0aGlzdW5pdD1sKDgpLGN1c3RvbXBhcmFtcz1HKG5bMl0sMTAwMCwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2V5ZWxhc2VyPXtuYW1lPSdBbmdyeSBFeWVzJyxyZWxvYWR0aW1lPTMscmdiY29sb3I9JzEgMCAwLjMnLHJhbmdlPTUwMCxkYW1hZ2U9e2RlZmF1bHQ9NjAwMCxjb21tYW5kZXJzPTYwMDB9fSxnb289e25hbWU9J1Nub3diYWxsIEJhcnJhZ2UnLHNvdW5kc3RhcnQ9J3BlbnNxdWF3azEnLGNlZ3RhZz0iYmxvYl90cmFpbF9ibHVlIixidXJzdD04LHNwcmF5YW5nbGU9MjA0OCx3ZWFwb252ZWxvY2l0eT02MDAscmVsb2FkdGltZT00LHJhbmdlPTEwMDAscmdiY29sb3I9IjAuNyAwLjg1IDEuMCIsZGFtYWdlPXtkZWZhdWx0PTEwMDB9fX0sd2VhcG9ucz17WzFdPXtkZWY9ImV5ZWxhc2VyIixiYWR0YXJnZXRjYXRlZ29yeT0iVlRPTCBPQkpFQ1QifSxbMl09e2RlZj0nZ29vJyxtYWluZGlyPScwIDAgMScsbWF4YW5nbGVkaWY9MTgwLGJhZHRhcmdldGNhdGVnb3J5PSJWVE9MIE9CSkVDVCJ9fX0scmFwdG9yX2Rvb21icmluZ2VyPXtleHBsb2RlYXM9IlNjYXZDb21Cb3NzRXhwbG8iLG1heHRoaXN1bml0PXksY3VzdG9tcGFyYW1zPUcoeCwxMDAwLCdiZXJzZXJrJyxuaWwsMSw5OSksd2VhcG9uZGVmcz17ZXllbGFzZXI9e25hbWU9J0V5ZXMgb2YgRG9vbScscmVsb2FkdGltZT0zLHJnYmNvbG9yPScwLjMgMSAwJyxyYW5nZT01MDAsZGFtYWdlPXtkZWZhdWx0PTQ4MDAwLGNvbW1hbmRlcnM9MjQwMDB9fSxnb289e25hbWU9J0FtYmVyIEhhaWxzdG9ybScsc291bmRzdGFydD0ncGVuYnJheTInLGNlZ3RhZz0iYmxvYl90cmFpbF9yZWQiLGJ1cnN0PTE1LHNwcmF5YW5nbGU9MzA3Mix3ZWFwb252ZWxvY2l0eT02MDAscmVsb2FkdGltZT01LHJnYmNvbG9yPSIwLjcgMC44NSAxLjAiLGRhbWFnZT17ZGVmYXVsdD01MDAwfX19LHdlYXBvbnM9e1sxXT17ZGVmPSJleWVsYXNlciIsYmFkdGFyZ2V0Y2F0ZWdvcnk9IlZUT0wgT0JKRUNUIn0sWzJdPXtkZWY9J2dvbycsbWFpbmRpcj0nMCAwIDEnLG1heGFuZ2xlZGlmPTE4MCxiYWR0YXJnZXRjYXRlZ29yeT0iVlRPTCBPQkpFQ1QifX19LHJhcHRvcl9tYW1hX2JhPXttYXh0aGlzdW5pdD1sKDQpLGN1c3RvbXBhcmFtcz1HKDU1LG5bM10tMSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTc1MH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NzUwfX19fSxyYXB0b3JfbWFtYV9maT17ZXhwbG9kZWFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJyxtYXh0aGlzdW5pdD1sKDQpLGN1c3RvbXBhcmFtcz1HKDU1LG5bM10tMSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2ZsYW1ldGhyb3dlcnNwaWtlPXtkYW1hZ2U9e2RlZmF1bHQ9MTIwfX0sZmxhbWV0aHJvd2VybWFpbj17ZGFtYWdlPXtkZWZhdWx0PTI0MH19fX0scmFwdG9yX21hbWFfZWw9e21heHRoaXN1bml0PWwoNCksY3VzdG9tcGFyYW1zPUcoNjUsMTAwMCwnYmVyc2VyaycpfSxyYXB0b3JfbWFtYV9hYz17bWF4dGhpc3VuaXQ9bCg0KSxjdXN0b21wYXJhbXM9Ryg2MCwxMDAwLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17bWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03NTB9fX19LHJhcHRvcl9sYW5kX2Fzc2F1bHRfYmFzaWNfdDRfdjI9e21heHRoaXN1bml0PWwoOCksY3VzdG9tcGFyYW1zPUcoMzMsNTAsJ3JhaWRlcicpfSxyYXB0b3JfbGFuZF9hc3NhdWx0X2Jhc2ljX3Q0X3YxPXttYXh0aGlzdW5pdD1sKDEyKSxjdXN0b21wYXJhbXM9Ryg1MSw2NCwncmFpZGVyJywnYmFzaWMnLDIpfX1kbyBhW09dPWFbT11vcnt9dGFibGUubWVyZ2VJblBsYWNlKGFbT10sUCx0cnVlKWVuZDtsb2NhbCBRPXtyYXB0b3JfbWFtYV9iYT0zNjAwMCxyYXB0b3JfbWFtYV9maT0zNjAwMCxyYXB0b3JfbWFtYV9lbD0zNjAwMCxyYXB0b3JfbWFtYV9hYz0zNjAwMCxyYXB0b3JfY29uc29ydD00NTAwMCxyYXB0b3JfZG9vbWJyaW5nZXI9OTAwMDB9bG9jYWwgUj1Vbml0RGVmX1Bvc3Q7ZnVuY3Rpb24gVW5pdERlZl9Qb3N0KEgsUylpZiBSIHRoZW4gUihILFMpZW5kO2xvY2FsIFQ9MTtpZiBoPjEuMyB0aGVuIFQ9aC8xLjMgZW5kO2ZvciBVLFYgaW4gcGFpcnMoUSlkbyBpZiBVbml0RGVmc1tVXXRoZW4gbG9jYWwgVz1tYXRoLmZsb29yKFYqVClVbml0RGVmc1tVXS5tZXRhbGNvc3Q9VyBlbmQgZW5kIGVuZA