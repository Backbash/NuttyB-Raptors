LS0gTWluaS1Cb3NzZXMNCi0tIEF1dGhvcnM6IFJDb3JlDQotLSBkb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVFTVnN1QUFNaEJyaGlaZFRpaFZmU0N3UHpiYlpXRExDdFhXUDIzQ1Uwa28NCmxvY2FsIGEsYixjLGQsZT1Vbml0RGVmcyBvcnt9LHRhYmxlLm1lcmdlLHRhYmxlLmNvcHksJ3JhcHRvcl9tYXRyaWFyY2hfYmFzaWMnLCdjdXN0b21mdXNpb25leHBsbydsb2NhbCBmPTE7aWYgU3ByaW5nLlV0aWxpdGllcy5HYW1ldHlwZS5Jc1JhcHRvcnMoKXRoZW4gZj0oI1NwcmluZy5HZXRUZWFtTGlzdCgpLTIpLzEyIGVuZDtsb2NhbCBmdW5jdGlvbiBnKGgpcmV0dXJuIG1hdGgubWF4KDEsbWF0aC5jZWlsKGgqZikpZW5kO2xvY2FsIGk9ezcwLDg1LDkwLDEwNSwxMTAsMTI1fWxvY2FsIGo9bWF0aC5tYXgoMSxTcHJpbmcuR2V0TW9kT3B0aW9ucygpLnJhcHRvcl9xdWVlbnRpbWVtdWx0IG9yIDEuMylsb2NhbCBrLGw9aVsxXSxpWyNpXWxvY2FsIG09aio5Nztsb2NhbCBuPShtLWspLyhsLWspZm9yIG89MiwjaSBkbyBpW29dPW1hdGguZmxvb3IoaysoaVtvXS1rKSpuKWVuZDtpWzFdPWs7bG9jYWwgZnVuY3Rpb24gcChxLHIscylpZiBhW3FdYW5kIG5vdCBhW3JddGhlbiBhW3JdPWIoYVtxXSxzIG9ye30pZW5kIGVuZDtsb2NhbCB0PWFbZF0uaGVhbHRoO3AoJ3JhcHRvcl9xdWVlbl92ZXJ5ZWFzeScsJ3JhcHRvcl9taW5pcV9hJyx7bmFtZT0nUXVlZW5saW5nIFByaW1hJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX3ZlcnllYXN5JyxoZWFsdGg9dCo1LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBQcmltYScsaTE4bl9lbl90b29sdGlwPSdNYWplc3RpYyBhbmQgYm9sZCwgcnVsZXIgb2YgdGhlIGh1bnQuJ319KXAoJ3JhcHRvcl9xdWVlbl9lYXN5JywncmFwdG9yX21pbmlxX2InLHtuYW1lPSdRdWVlbmxpbmcgU2VjdW5kYScsaWNvbnR5cGU9J3JhcHRvcl9xdWVlbl9lYXN5JyxoZWFsdGg9dCo3LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1F1ZWVubGluZyBTZWN1bmRhJyxpMThuX2VuX3Rvb2x0aXA9J1N3aWZ0IGFuZCBzaGFycCwgYSBub2JsZSBhbW9uZyByYXB0b3JzLid9fSlwKCdyYXB0b3JfcXVlZW5fbm9ybWFsJywncmFwdG9yX21pbmlxX2MnLHtuYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpY29udHlwZT0ncmFwdG9yX3F1ZWVuX25vcm1hbCcsaGVhbHRoPXQqOSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdRdWVlbmxpbmcgVGVydGlhJyxpMThuX2VuX3Rvb2x0aXA9J1JlZmluZWQgdGFzdGVzLiBMaWtlcyBoZXIgcHJleSByYXJlLid9fSlmb3IgdSx2IGluIGlwYWlyc3t7J3JhcHRvcl9tYXRyaWFyY2hfYmFzaWMnLCdyYXB0b3JfbWFtYV9iYScsJ01hdHJvbmEnLCdDbGF3cyBjaGFyZ2VkIHdpdGggdmVuZ2VhbmNlLid9LHsncmFwdG9yX21hdHJpYXJjaF9maXJlJywncmFwdG9yX21hbWFfZmknLCdQeXJvIE1hdHJvbmEnLCdBIGZpcmVzdG9ybSBvZiBtYXRlcm5hbCB3cmF0aC4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMnLCdyYXB0b3JfbWFtYV9lbCcsJ1BhcmFseXppbmcgTWF0cm9uYScsJ0NyYWNrbGluZyB3aXRoIHJhZ2UsIHJlYWR5IHRvIHN0cmlrZS4nfSx7J3JhcHRvcl9tYXRyaWFyY2hfYWNpZCcsJ3JhcHRvcl9tYW1hX2FjJywnQWNpZCBNYXRyb25hJywnQWNpZC1mdWVsZWQsIG1lbHRpbmcgZXZlcnl0aGluZyBpbiBzaWdodC4nfX1kbyBwKHZbMV0sdlsyXSx7bmFtZT12WzNdLGljb250eXBlPXZbMV0saGVhbHRoPXQqMS41LGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9dlszXSxpMThuX2VuX3Rvb2x0aXA9dls0XX19KWVuZDtwKCdjcml0dGVyX3Blbmd1aW5raW5nJywncmFwdG9yX2NvbnNvcnQnLHtuYW1lPSdSYXB0b3IgQ29uc29ydCcsaWNvbnR5cGU9J2NvcmtvcmcnLGhlYWx0aD10KjQsbWFzcz0xMDAwMDAsc29uYXJzdGVhbHRoPWZhbHNlLHN0ZWFsdGg9ZmFsc2Usc3BlZWQ9NjcuNSxjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdSYXB0b3IgQ29uc29ydCcsaTE4bl9lbl90b29sdGlwPSdTbmVha3kgcG93ZXJmdWwgbGl0dGxlIHRlcnJvci4nfX0pYS5yYXB0b3JfY29uc29ydC53ZWFwb25kZWZzLm1lbGVlPWMoYVtkXS53ZWFwb25kZWZzLm1lbGVlKWxvY2FsIGZ1bmN0aW9uIHcoeCx5LHosQSxCLEMpcmV0dXJue3JhcHRvcmN1c3RvbXNxdWFkPXRydWUscmFwdG9yc3F1YWR1bml0c2Ftb3VudD1CIG9yIDEscmFwdG9yc3F1YWRtaW5hbmdlcj14LHJhcHRvcnNxdWFkbWF4YW5nZXI9eSxyYXB0b3JzcXVhZHdlaWdodD1DIG9yIDEscmFwdG9yc3F1YWRyYXJpdHk9QSBvcidiYXNpYycscmFwdG9yc3F1YWRiZWhhdmlvcj16LHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZT01MDAscmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZT0wLjc1fWVuZDtsb2NhbCBEPXtzZWxmZGVzdHJ1Y3Rhcz1lLGV4cGxvZGVhcz1lLG1heHRoaXN1bml0PWcoNCksd2VhcG9uZGVmcz17eWVsbG93X21pc3NpbGU9e2RhbWFnZT17ZGVmYXVsdD0xLHZ0b2w9MTAwMH19fX1mb3IgRSxGIGluIHBhaXJze3JhcHRvcl9taW5pcV9hPWIoRCx7Y3VzdG9tcGFyYW1zPXcoaVsxXSxpWzJdLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17Z29vPXtkYW1hZ2U9e2RlZmF1bHQ9NzUwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD00MDAwfX19fSkscmFwdG9yX21pbmlxX2I9YihELHtjdXN0b21wYXJhbXM9dyhpWzNdLGlbNF0sJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD0xNTAwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03MDAwfX19fSkscmFwdG9yX21pbmlxX2M9YihELHtjdXN0b21wYXJhbXM9dyhpWzVdLGlbNl0sJ2JlcnNlcmsnKSx3ZWFwb25kZWZzPXtnb289e2RhbWFnZT17ZGVmYXVsdD0zMDAwfX0sbWVsZWU9e2RhbWFnZT17ZGVmYXVsdD0xMDAwMH19fX0pLHJhcHRvcl9jb25zb3J0PXtleHBsb2RlYXM9J3JhcHRvcl9lbXBkZWF0aF9iaWcnLG1heHRoaXN1bml0PWcoOCksY3VzdG9tcGFyYW1zPXcoaVsyXSwxMDAwLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17ZXllbGFzZXI9e3JhbmdlPTgwMCxyZWxvYWR0aW1lPTIsZGFtYWdlPXtjb21tYW5kZXJzPTYwMDAsZGVmYXVsdD02MDAwfX0sbWVsZWU9e25hbWU9J1JveWFsIEJlYWsgQXR0YWNrJyxyYW5nZT0zMDAsc291bmRzdGFydD0ncGVuc3F1YXdrMScsZGFtYWdlPXtkZWZhdWx0PTEwMDB9fX0sd2VhcG9ucz17WzJdPXtkZWY9J21lbGVlJyxtYWluZGlyPScwIDAgMScsbWF4YW5nbGVkaWY9MTU1fX19LHJhcHRvcl9tYW1hX2JhPXttYXh0aGlzdW5pdD1nKDQpLGN1c3RvbXBhcmFtcz13KDU1LGlbM10tMSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2dvbz17ZGFtYWdlPXtkZWZhdWx0PTc1MH19LG1lbGVlPXtkYW1hZ2U9e2RlZmF1bHQ9NzUwfX19fSxyYXB0b3JfbWFtYV9maT17ZXhwbG9kZWFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJyxtYXh0aGlzdW5pdD1nKDQpLGN1c3RvbXBhcmFtcz13KDU1LGlbM10tMSwnYmVyc2VyaycpLHdlYXBvbmRlZnM9e2ZsYW1ldGhyb3dlcnNwaWtlPXtkYW1hZ2U9e2RlZmF1bHQ9MTIwfX0sZmxhbWV0aHJvd2VybWFpbj17ZGFtYWdlPXtkZWZhdWx0PTI0MH19fX0scmFwdG9yX21hbWFfZWw9e21heHRoaXN1bml0PWcoNCksY3VzdG9tcGFyYW1zPXcoNjUsMTAwMCwnYmVyc2VyaycpfSxyYXB0b3JfbWFtYV9hYz17bWF4dGhpc3VuaXQ9Zyg0KSxjdXN0b21wYXJhbXM9dyg2MCwxMDAwLCdiZXJzZXJrJyksd2VhcG9uZGVmcz17bWVsZWU9e2RhbWFnZT17ZGVmYXVsdD03NTB9fX19LHJhcHRvcl9sYW5kX2Fzc2F1bHRfYmFzaWNfdDRfdjI9e21heHRoaXN1bml0PWcoOCksY3VzdG9tcGFyYW1zPXcoMzMsNTAsJ3JhaWRlcicpfSxyYXB0b3JfbGFuZF9hc3NhdWx0X2Jhc2ljX3Q0X3YxPXttYXh0aGlzdW5pdD1nKDE2KSxjdXN0b21wYXJhbXM9dyg1MSw2OSwncmFpZGVyJywnYmFzaWMnLDIpfX1kbyBhW0VdPWFbRV1vcnt9dGFibGUubWVyZ2VJblBsYWNlKGFbRV0sRix0cnVlKWVuZA