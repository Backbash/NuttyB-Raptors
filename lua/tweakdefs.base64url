--NuttyB v1.52b Def Main
-- Authors: ChrispyNut, BackBash
-- docs.google.com/spreadsheets/d/1QSVsuAAMhBrhiZdTihVfSCwPzbbZWDLCtXWP23CU0ko
local a,b,pairs,c=UnitDefs or{},'repulsor',pairs,table.merge;function addWeapon(d,e,f)a[d]=a[d]or{}a[d].weapons=a[d].weapons or{}a[d].weapondefs=a[d].weapondefs or{}a[d].customparams=a[d].customparams or{}table.insert(a[d].weapons,{def=b,onlytargetcategory=f or''})a[d].weapondefs[b]=e;if e.shield and e.shield.power>0 then e.range=e.shield.radius;a[d].customparams=c(a[d].customparams or{},{off_on_stun='true',shield_color_mult=0.8,shield_power=e.shield.power,shield_radius=e.shield.radius})end end;for g,h in ipairs({'armcom','armcomlvl2','armcomlvl3','armcomlvl4','corcom','corcomlvl2','corcomlvl3','corcomlvl4','legcom','legcomlvl2','legcomlvl3','legcomlvl4','legcomlvl5'})do addWeapon(h,{avoidfeature=false,craterareaofeffect=0,craterboost=0,cratermult=0,edgeeffectiveness=0.15,name='PlasmaRepulsor',range=50,soundhitwet='sizzle',weapontype='Shield',damage={default=100},shield={alpha=0.15,armortype='shields',energyuse=1,force=2.5,intercepttype=1,power=500,powerregen=3,powerregenenergy=3,radius=100,repulser=true,smart=true,startingpower=100,visiblerepulse=true,badcolor={1,0.2,0.2,0.2},goodcolor={0.2,1,0.2,0.17}}})end;for i,j in pairs(a)do if string.sub(i,1,24)=='raptor_air_fighter_basic'then if j.weapondefs then for g,k in pairs(j.weapondefs)do k.name='Spike'k.accuracy=200;k.collidefriendly=0;k.collidefeature=0;k.avoidfeature=0;k.avoidfriendly=0;k.areaofeffect=64;k.edgeeffectiveness=0.3;k.explosiongenerator='custom:raptorspike-large-sparks-burn'k.cameraShake={}k.dance={}k.interceptedbyshieldtype=0;k.model='Raptors/spike.s3o'k.reloadtime=1.1;k.soundstart='talonattack'k.startvelocity=200;k.submissile=1;k.smoketrail=0;k.smokePeriod={}k.smoketime={}k.smokesize={}k.smokecolor={}k.soundhit={}k.texture1={}k.texture2={}k.tolerance={}k.tracks=0;k.turnrate=60000;k.weaponacceleration=100;k.weapontimer=1;k.weaponvelocity=1000;k.weapontype={}k.wobble={}end end elseif i:match'^[acl][ore][rgm]com'and not i:match'_scav$'then a[i].featuredefs.dead.reclaimable=false;a[i].featuredefs.dead.damage=560000 end end;local l={raptor_air_kamikaze_basic_t2_v1={selfdestructas='raptor_empdeath_big'},raptor_land_swarmer_emp_t2_v1={weapondefs={raptorparalyzersmall={damage={shields=60},paralyzetime=6}}},raptor_land_assault_emp_t2_v1={weapondefs={raptorparalyzerbig={damage={shields=140},paralyzetime=10}}},raptor_allterrain_arty_emp_t2_v1={weapondefs={goolauncher={paralyzetime=6}}},raptor_allterrain_arty_emp_t4_v1={weapondefs={goolauncher={paralyzetime=10}}},raptor_air_bomber_emp_t2_v1={weapondefs={weapon={damage={shields=1000,default=2000},paralyzetime=10}}},raptor_allterrain_swarmer_emp_t2_v1={weapondefs={raptorparalyzersmall={damage={shields=60},paralyzetime=6}}},raptor_allterrain_assault_emp_t2_v1={weapondefs={raptorparalyzerbig={damage={shields=140},paralyzetime=6}}},raptor_matriarch_electric={weapondefs={goo={paralyzetime=13},melee={paralyzetime=13},spike_emp_blob={paralyzetime=13}}}}for m,n in pairs(l)do if a[m]then a[m]=c(a[m],n)end end;for g,o in pairs({'raptor_antinuke','raptor_turret_acid_t2_v1','raptor_turret_acid_t3_v1','raptor_turret_acid_t4_v1','raptor_turret_antiair_t2_v1','raptor_turret_antiair_t3_v1','raptor_turret_antiair_t4_v1','raptor_turret_antinuke_t2_v1','raptor_turret_antinuke_t3_v1','raptor_turret_basic_t2_v1','raptor_turret_basic_t3_v1','raptor_turret_basic_t4_v1','raptor_turret_burrow_t2_v1','raptor_turret_emp_t2_v1','raptor_turret_emp_t3_v1','raptor_turret_emp_t4_v1','raptor_worm_green'})do local p=a[o]p.maxthisunit=10;p.health=p.health*2;if p.weapondefs then for g,q in pairs(p.weapondefs)do q.reloadtime=q.reloadtime/1.5;q.range=q.range/2 end end end;for g,r in pairs(a)do if r.builder==true then if r.canfly==true then r.explodeas=''r.selfdestructas=''end end end;local s={'raptor_air_bomber_basic_t2_v1','raptor_air_bomber_basic_t2_v2','raptor_air_bomber_basic_t4_v1','raptor_air_bomber_basic_t4_v2','raptor_air_bomber_basic_t1_v1'}for g,t in pairs(s)do local j=a[t]if j.weapondefs then for g,u in pairs(j.weapondefs)do u.damage.default=u.damage.default/1.33 end end end;local v={'armrespawn','correspawn','legnanotcbase'}for g,i in ipairs(v)do local w=UnitDefs[i]if w then w.cantbetransported,w.footprintx,w.footprintz=false,4,4;w.customparams=w.customparams or{}w.customparams.paratrooper=true;w.customparams.fall_damage_multiplier=0 end end