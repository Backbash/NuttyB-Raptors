LS1NZWF0YmFsbGx1bmNoIFJlbG9hZGVkDQpsb2NhbCBVbml0RGVmcyxhPVVuaXREZWZzIG9ye30sJ2FybWJvdHJhaWwnbG9jYWwgYj17YXJtbWVhdGJhbGw9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J01lYXRiYWxsIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTMyMDAwLG1ldGFscGVyc2hvdD01MzAwLGVuZXJneXBlcnNob3Q9OTYwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtbWVhdGJhbGwnfX19fSxhcm1hc3NpbWlsYXRvcj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQXNzaW1pbGF0b3IgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9MzIwMDAsbWV0YWxwZXJzaG90PTQ1MDAsZW5lcmd5cGVyc2hvdD04MDAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdhcm1hc3NpbWlsYXRvcid9fX19LGFybXB3dDQ9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0VwaWMgUGF3biBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9MTQyMDAsZW5lcmd5cGVyc2hvdD00ODAwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtcHd0NCd9fX19LGxlZ2VzaG90Z3VubWVjaD17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUHJldG9yaWFuIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTMyMDAwLG1ldGFscGVyc2hvdD0xMjUwMCxlbmVyZ3lwZXJzaG90PTM4NDAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdsZWdlc2hvdGd1bm1lY2gnfX19fSxsZWdqYXY9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0phdmVsaW4gTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9MzIwMDAsbWV0YWxwZXJzaG90PTIxNTAsZW5lcmd5cGVyc2hvdD0xMDI0MDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nbGVnamF2J319fX0sYXJtcmF6PXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdSYXpvcmJhY2sgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9MzIwMDAsbWV0YWxwZXJzaG90PTY3NTAsZW5lcmd5cGVyc2hvdD0yODM1MjAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtcmF6J319fX0sY29yYWt0ND17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nRXBpYyBHcnVuZCBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9MTA3MDAsZW5lcmd5cGVyc2hvdD0zODQwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nY29yYWt0NCd9fX19LGNvcmRlbW9uPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdEZW1vbiBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9MTA3MDAsZW5lcmd5cGVyc2hvdD0zODQwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nY29yZGVtb24nfX19fSxhcm12YWRlcj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nVHVtYmxld2VlZCBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9MTE1LGVuZXJneXBlcnNob3Q9MTI1MDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtdmFkZXInfX19fSxhcm12YWRlcnQ0PXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdFcGljIFR1bWJsZXdlZWQgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9MzIwMDAsbWV0YWxwZXJzaG90PTI2NjAwLGVuZXJneXBlcnNob3Q9NDgwMDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2FybXZhZGVydDQnfX19fSxhcm10MT17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQXJtYWRhIFQxIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MC41LHJhbmdlPTMyMDAwLG1ldGFscGVyc2hvdD0yNTAsZW5lcmd5cGVyc2hvdD0xMjUwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdhcm1oYW0gYXJtamV0aCBhcm1wdyBhcm1yb2NrIGFybXdhciBhcm1haCBhcm1hbmFjIGFybW1oIGFybXNoIGFybWFydCBhcm1mYXYgYXJtZmxhc2ggYXJtamFudXMgYXJtcGluY2VyIGFybXNhbSBhcm1zdHVtcCBhcm16YXBwZXInLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxhcm10Mj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQXJtYWRhIFQyIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MSxyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtYWFrIGFybWFtcGggYXJtZmFzdCBhcm1mYm95IGFybWZpZG8gYXJtbWF2IGFybXNuaXBlIGFybXNwdGsgYXJtemV1cyBhcm1idWxsIGFybWNyb2MgYXJtZ3JlbWxpbiBhcm1sYXRuayBhcm1tYW5uaSBhcm1tYXJ0IGFybW1lcmwgYXJteW9yaycsc3Bhd25zX21vZGU9J3JhbmRvbSd9fX19LGFybXQzPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdBcm1hZGEgVDMgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17c3RvY2twaWxldGltZT0yLHJhbmdlPTMyMDAwLG1ldGFscGVyc2hvdD04NTAwLGVuZXJneXBlcnNob3Q9MTgwMDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2FybWJhbnRoIGFybWx1biBhcm1tYXIgYXJtcHJvd2wgYXJtcmF6IGFybXRob3IgYXJtdmFuZyBhcm1hc3NpbWlsYXRvciBhcm1sdW5jaGJveCBhcm1zcHRrdDQgYXJtZHJvbmVjYXJyeWxhbmQgYXJtcmF0dGV0NCcsc3Bhd25zX21vZGU9J3JhbmRvbSd9fX19LGNvcnQxPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdDb3J0ZXggVDEgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17c3RvY2twaWxldGltZT0wLjUscmFuZ2U9MzIwMDAsbWV0YWxwZXJzaG90PTI1MCxlbmVyZ3lwZXJzaG90PTEyNTAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2NvcmFrIGNvcmNyYXNoIGNvcnN0b3JtIGNvcnRodWQgY29yYWggY29yaGFsIGNvcm1oIGNvcnNoIGNvcnNuYXAgY29ydGhvdnIgY29yZmF2IGNvcmdhcnAgY29yZ2F0b3IgY29ybGV2bHIgY29ybWlzdCBjb3JyYWlkIGNvcndvbHYgY29ydG9yY2gnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxjb3J0Mj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQ29ydGV4IFQyIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MSxyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nY29yYWFrIGNvcmFtcGggY29yY2FuIGNvcmZhc3QgY29yaHJrIGNvcm1vcnQgY29ycHlybyBjb3Jyb2FjaCBjb3Jza3RsIGNvcnN1bW8gY29ydGVybWl0ZSBjb3JiYW4gY29yZ29sIGNvcm1hYm0gY29ybWFydCBjb3JwYXJyb3cgY29ycmVhcCBjb3JzYWxhIGNvcnNlYWwgY29yc2VudCBjb3JzaWVnZWJyZWFrZXIgY29ydHJlbSBjb3J2cmFkIGNvcnZyb2MgY29yZnRpZ2VyIGNvcmdhdHJlYXAnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxjb3J0Mz17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQ29ydGV4IFQzIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MixyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9ODUwMCxlbmVyZ3lwZXJzaG90PTE4MDAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdjb3JjYXQgY29yZGVtb24gY29yanVnZyBjb3JrYXJnIGNvcmtvcmcgY29yc2hpdmEgY29yYWt0NCBjb3JkZWFkZXllIGNvcmthcmdhbmV0aHQ0IGNvcmthcmsgY29ydGhlcm1pdGUgY29yZ29sdDQnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxsZWd0MT17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnaW9uIFQxIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MC41LHJhbmdlPTMyMDAwLG1ldGFscGVyc2hvdD0yNTAsZW5lcmd5cGVyc2hvdD0xMjUwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdsZWdiYWwgbGVnY2VuIGxlZ2dvYiBsZWdrYXJrIGxlZ2xvYiBsZWdhaCBsZWdjYXIgbGVnbWggbGVnbmVyIGxlZ3NoIGxlZ2FtcGh0YW5rIGxlZ2JhciBsZWdnYXQgbGVnaGFkZXMgbGVnaGVsaW9zIGxlZ3JhaWwnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxsZWd0Mj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnaW9uIFQyIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MSxyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nbGVnYW1waCBsZWdiYXJ0IGxlZ2RlY29tIGxlZ2luYyBsZWdzaG90IGxlZ3NuYXBwZXIgbGVnc3JhaWwgbGVnc3RyIGxlZ2FoZWF0dGFuayBsZWdhbWNsdXN0ZXIgbGVnYXNraXJtdGFuayBsZWdhdnJvYyBsZWdmbG9hdCBsZWdpbmYgbGVnbWVkIGxlZ21ydiBsZWd2Y2FycnkgbGVndmZsYWsnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxsZWd0Mz17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnaW9uIFQzIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MixyYW5nZT0zMjAwMCxtZXRhbHBlcnNob3Q9ODUwMCxlbmVyZ3lwZXJzaG90PTE4MDAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdsZWVnbWVjaCBsZWdidW5rIGxlZ2VoZWF0cmF5bWVjaCBsZWdlbHJwY21lY2ggbGVnZXJhaWx0YW5rIGxlZ2VzaG90Z3VubWVjaCBsZWdqYXYgbGVna2VyZXMgbGVnZ29idDMgbGVncGVkZSBsZWdzcmFpbHQ0JyxzcGF3bnNfbW9kZT0ncmFuZG9tJ319fX19aWYgVW5pdERlZnMuY29ybWFuZG90NCB0aGVuIGZvciBjLGQgaW4gcGFpcnMoYilkbyBsb2NhbCBlPWEuLidfJy4uYztpZiBVbml0RGVmc1thXWFuZCBub3QgVW5pdERlZnNbZV10aGVuIFVuaXREZWZzW2VdPXRhYmxlLm1lcmdlKFVuaXREZWZzW2FdLGQpdGFibGUuaW5zZXJ0KFVuaXREZWZzLmNvcm1hbmRvdDQuYnVpbGRvcHRpb25zLGUpZW5kIGVuZCBlbmQ